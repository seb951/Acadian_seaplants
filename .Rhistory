install.packages("pheatmap")
library(pheatmap)
getwd()
setwd("~/")
/Users/jerry/Desktop/metab
getwd()
system("ls")
system("ls *pdf")
system("ls *png")
?ad.factor
data(bird)
data(birds)
data(bird.order)
ex = matrix(c(1:100),nrow = 20, ncol = 5)
ex
as.factor(ex[,5])
ex
str(ex)
ex = data.framematrix(c(1:100),nrow = 20, ncol = 5))
ex = data.frame(matrix(c(1:100),nrow = 20, ncol = 5))
ex
ex$test = c("a","b","c")
ex$test = c("a",rep("b",19))
ex
str(ex)
ex$test = as.factor(c("a",rep("b",19)))
ex
str(ex)
ex$test[2] = "c"
str(ex$test[2])
as.data.frame(ex$test[2])
as.data.frame(ex$test)
as.data.frame(ex$test, factor = "a","b","c")
as.data.frame(ex$test, factor = c("a","b","c"))
ex$test
?factor
factor(ex$test)
factor(1:10)
factor(c("a","b","c"))
ex$test = factor(c("a","b","c"))
str(ex$test)
summary(ex$test)
ex$test = factor(rep("a",20))
ex$test = factor(rep("d",20))
str(ex$test)
ex$test = factor((rep("d",10),"e"))
ex$test = factor(c(rep("d",10),"e"))
ex$test = factor(c(rep("d",19),"e"))
ex
str(ex)
ex2 = ex[1:19,]
str(ex2)
ex2
ex3 = rbind(ex2,c(1,1,1,1,""f))
ex3 = rbind(ex2,c(1,1,1,1,"f"))
x = sample(10)
?rnorm
rnorm(1)
rnorm(2)
hist(rnorm(100))
x = rnorm(100)
y = jitter(x)
cor(x,y)
cor.test(x,y)
?cor.test
y = jitter(x,100)
cor.test(x,y)
plot(x,y)
y = jitter(x,1000)
plot(x,y)
cor.test(x,y)
z = rnorm(100,1)
hist(x)
hist(z)
hist(c(z,y,x))
z = rnorm(1000,1)
x = rnorm(1000)
y = jitter(x,1000)
hist(c(z,y,x))
hist(c(z,y,x),breaks=100)
z = rnorm(1000,4)
hist(c(z,y,x),breaks=100)
z = rnorm(1000,2)
hist(c(z,y,x),breaks=100)
t.test(z,x)
ks.test(z,x)
kruskal.test(z,x)
t.test(z,x)
t.test(z,x,y)
t.test(z,x)
n = t.test(z,x)
n
str(n)
n = lm(z~x)
n
anova(n)
mean(z)
mean(x)
stage = c(rep("a",500),rep("b",300),rep("c",200))
lm(x~y*c)
lm(x~y*stage)
anova(lm(x~y*stage))
summary(lm(x~y*stage))
hist(c(z,y,x),breaks=100)
hist(c(y,x),breaks=100)
hist(c(y,x),breaks=100,add =T)
hist(c(y,x),breaks=100,add =T)
hist(c(y,x),breaks=100,add =T)
hist(c(y,x),breaks=100,add =T)
hist(c(y,x),breaks=100)
hist(c(z),breaks=100,add =T)
hist(c(y,x),breaks=100)
hist(c(z),breaks=100,add =T,col = "red")
hist(c(z),breaks=100,add =T,col = "red")
hist(c(y,x),breaks=100,xlim = (-4,10))
hist(c(y,x),breaks=100,xlim = c(-4,10))
hist(c(z),breaks=100,add =T,col = "red")
hist(c(y,x),breaks=100,xlim = c(-4,6))
hist(c(z),breaks=100,add =T,col = "red")
t.test(x,c(yx))
t.test(x,c(y,x))
t.test(z,c(y,x))
kruskal.test(z,c(y,x))
kruskal.test(z,c(y))
t.test(z,c(y))
?kruskal.test
z = rnorm(1000,10)
t.test(z,c(y))
hist(c(y,x),breaks=100,xlim = c(-4,6))
hist(c(y,x),breaks=100,xlim = c(-4,1))
dev.new()
hist(c(y,x),breaks=100,xlim = c(-4,15))
hist(c(z),breaks=100,add =T,col = "red")
knit_with_parameters('~/Documents/protocols_documentation/plot_phylogeny_inR/phylo_plot_02_03_2018.Rmd')
420/375
375.1.1
375*1.1
375*1.12
library(DESeq2)
?DESeq2
?DESeq
getwd()
#combining figures
library(multipanelfigure)
library(magrittr)
library(dplyr)
library(DECIPHER)
library(phangorn)
library(phyloseq)
library(NJ)
?NJ
setwd("/Users/jerry/Documents/CSBQ/hijri/Acadian_seaplants")
###setting things up ----
library(nlme)
library(vegan)
library(pals)
library(ape)
library(dplyr)
library(ggplot2)
#load ASVS and taxonomy information ----
dev.new()
asv = read.table("results/asv/asv.bacteria_root",row.names = 1, sep = " ",header =TRUE,stringsAsFactors = F)
taxo = read.table("results/asv/asv.taxo.bacteria_root",row.names = 1, sep = " ",header =TRUE,stringsAsFactors = F)
head(taxo)
dim(taxo)
taxo[1:10,1:6]
taxo[1:20,1:6]
taxo[1:100,1:6]
#remove the bad samples (below 4 standard deviations...).
asv.sum = rowSums(asv)
min(asv.sum);max(asv.sum)
asv.sum.mean = mean(asv.sum)
asv.sum.sd = sd(asv.sum)
asv.filt = asv[asv.sum > (asv.sum.mean - 4*asv.sum.sd),]
asv.filt = asv[asv.sum > 1000,]
#98% of ASVs are present in less than 5 individuals (5% of samples): this is huge. and justifies the clustering I think for soil bacteria....
asv.singletons = rep(0,ncol(asv.filt))
for(i in 1:ncol(asv.filt))
{
asv.singletons[i] = length(asv.filt[asv.filt[,i]!=0,i])
}
asv.filt.abundants = asv.filt[,asv.singletons>5]
taxo.abundants = taxo[asv.singletons>5,]
taxo.abundants[1:40,1:6]
setwd("/Users/jerry/Documents/CSBQ/hijri/Acadian_seaplants")
###setting things up ----
library(nlme)
library(vegan)
library(pals)
library(ape)
library(dplyr)
library(ggplot2)
#load ASVS and taxonomy information ----
dev.new()
asv = read.table("results/asv/asv.bacteria_root",row.names = 1, sep = " ",header =TRUE,stringsAsFactors = F)
taxo = read.table("results/asv/asv.taxo.bacteria_root",row.names = 1, sep = " ",header =TRUE,stringsAsFactors = F)
#tidy up ----
#remove the bad samples (below 4 standard deviations...).
asv.sum = rowSums(asv)
min(asv.sum);max(asv.sum)
asv.sum.mean = mean(asv.sum)
asv.sum.sd = sd(asv.sum)
asv.filt = asv[asv.sum > (asv.sum.mean - 4*asv.sum.sd),]
asv.filt = asv[asv.sum > 1000,]
#98% of ASVs are present in less than 5 individuals (5% of samples): this is huge. and justifies the clustering I think for soil bacteria....
asv.singletons = rep(0,ncol(asv.filt))
for(i in 1:ncol(asv.filt))
{
asv.singletons[i] = length(asv.filt[asv.filt[,i]!=0,i])
}
asv.filt.abundants = asv.filt[,asv.singletons>5]
taxo.abundants = taxo[asv.singletons>5,]
#what fraction of ASV do you got rid off
print(length(asv.singletons[asv.singletons<5])/length(asv.singletons))
#what percentage of reads did you keep
sum(asv.filt.abundants)/sum(asv.filt)
#relative abundance
asv.filt.abundants.norm = asv.filt.abundants/rowSums(asv.filt.abundants)
###statistal analyses on ASVs----
design = read.table("reference_material/experimental_design.txt", header = TRUE, stringsAsFactors = FALSE)
#keep samples of interest in a new design.keep dataframe.
design.keep = NULL
for(i in 1:nrow(asv.filt.abundants.norm))
{
design.keep = rbind(design.keep,design[design[,2] == rownames(asv.filt.abundants.norm)[i],])
}
asv.filt.abundants.norm.design = cbind(asv.filt.abundants.norm, design.keep)
#select and ASV (here ASV1)
ASV1 = asv.filt.abundants.norm.design[,c(1,(ncol(asv.filt.abundants.norm.design)-9):ncol(asv.filt.abundants.norm.design))]
#linear mixed effect model  (block & replicate are random, replicate is nested in bloc)/ for ASV1 ----
lmm1 <- lme(ASV1~fertilization+species,data = ASV1,random = ~1|bloc/replicate, method = "REML")
anova(lmm1)
#              numDF denDF   F-value p-value
#(Intercept)       1    68 20102.958  <.0001
#fertilization     1    68    21.868  <.0001
#species           1    68   179.835  <.0001
###barplots of all ASVs ----
###to look at diversity among fertilization, soil/roots, planted, species----
#first group things according to treatment and species.
asv.filt.abundants.norm.barplot = cbind(colMeans(asv.filt.abundants.norm[design.keep$fertilization == 0, ]),
colMeans(asv.filt.abundants.norm[design.keep$fertilization == 1, ]),
colMeans(asv.filt.abundants.norm[design.keep$species == "tomato", ]),
colMeans(asv.filt.abundants.norm[design.keep$species == "pepper", ]))
colnames(asv.filt.abundants.norm.barplot) = c("fertilization", "no.fertiliz.","tomato","pepper")
#barplot (TOP20)
barplot.taxo = c(1:nrow(taxo))
for(i in 1:length(barplot.taxo))
{
barplot.taxo[i]=paste(taxo[i,2:6],collapse = ";")
}
dev.new()
par(mar=c(16,4,4,2))
barplot(asv.filt.abundants.norm.barplot,beside = F,font = 3, axisnames = TRUE,ylab = "Relative ASV abundance",col = c(cols25(),rep("grey",650)), las = 3, xpd = TRUE)
legend(0.1,-0.22,fill = cols25()[1:20],legend =  barplot.taxo[1:20],cex = 0.75,xpd =TRUE)
dev.print(device=pdf, "figures/bacteria/Figure4br_ASVabundance.pdf", onefile=FALSE)
dev.off()
###barplot by family ----
#summarize with dplyr by family
asv.filt.abundants.norm.FAMILY = as.data.frame(asv.filt.abundants.norm.barplot) %>% group_by(taxo.abundants$Family) %>% summarise_all(sum)
asv.filt.abundants.norm.FAMILY[11,1] = "Oxyphotobacteria (Class)*"
asv.filt.abundants.norm.FAMILY[4,1] = "Chloroplast*"
#Figure 4 - barplots -----
figure4 = multi_panel_figure(width = 14,height = 16, unit = "inch",rows = 2,columns = 2)
figure4 %<>% fill_panel("figures/fungi/Figure4fs_FAMILY_ASVabundance.pdf",row = 1, column = 1)
figure4 %<>% fill_panel("figures/fungi/Figure4fr_FAMILY_ASVabundance.pdf",row = 1, column = 2)
figure4 %<>% fill_panel("figures/bacteria/Figure4bs_FAMILY_ASVabundance.pdf",row = 2, column = 1)
figure4 %<>% fill_panel("figures/bacteria/Figure4br_FAMILY_ASVabundance.pdf",row = 2, column = 2)
figure4 %>% save_multi_panel_figure(filename = "figures/Figure4_barplots.pdf")
setwd("/Users/jerry/Documents/CSBQ/hijri/Acadian_seaplants")
#combining figures
library(multipanelfigure)
library(magrittr)
library(dplyr)
library(DECIPHER)
library(phangorn)
library(phyloseq)
#Figure 4 - barplots -----
figure4 = multi_panel_figure(width = 14,height = 16, unit = "inch",rows = 2,columns = 2)
figure4 %<>% fill_panel("figures/fungi/Figure4fs_FAMILY_ASVabundance.pdf",row = 1, column = 1)
figure4 %<>% fill_panel("figures/fungi/Figure4fr_FAMILY_ASVabundance.pdf",row = 1, column = 2)
figure4 %<>% fill_panel("figures/bacteria/Figure4bs_FAMILY_ASVabundance.pdf",row = 2, column = 1)
figure4 %<>% fill_panel("figures/bacteria/Figure4br_FAMILY_ASVabundance.pdf",row = 2, column = 2)
figure4 %>% save_multi_panel_figure(filename = "figures/Figure4_barplots.pdf")
#top10
temp = asv.filt.abundants.norm.FAMILY[order(rowSums(asv.filt.abundants.norm.FAMILY[,2:5]),decreasing = T),]
asv.filt.abundants.norm.FAMILY.top10 = temp
barplot.data = as.data.frame(unlist(asv.filt.abundants.norm.FAMILY.top10[,2:5]))
colnames(barplot.data)[1] = "fraction"
n = nrow(asv.filt.abundants.norm.FAMILY.top10)
barplot.data$treatment =c(rep("control",n),rep("fertilization",n),rep("tomato",n),rep("pepper",n))
barplot.data$taxonomy = unlist(rep((asv.filt.abundants.norm.FAMILY.top10[,1]),ncol(asv.filt.abundants.norm.FAMILY.top10)-1))
###ggplot ----
dev.new()
p = ggplot() + labs(title = "Roots - bacteria",fill = "Taxonomy (Family)") +
theme_bw() +
theme(plot.title = element_text(hjust = 0.5, size=14, face="bold")) +
geom_bar(aes(y = fraction, x = treatment, fill = taxonomy),
data = barplot.data,stat="identity")
p + scale_fill_brewer(palette = "Set3")
dev.print(device=pdf, "figures/bacteria/Figure4br_FAMILY_ASVabundance.pdf", onefile=FALSE)
dev.off()
asv.filt.abundants.norm.FAMILY[11,1] = "chloroplast*"
asv.filt.abundants.norm.FAMILY[4,1] = "Alphaproteobacteria (Class)*"
#top10
temp = asv.filt.abundants.norm.FAMILY[order(rowSums(asv.filt.abundants.norm.FAMILY[,2:5]),decreasing = T),]
asv.filt.abundants.norm.FAMILY.top10 = temp
barplot.data = as.data.frame(unlist(asv.filt.abundants.norm.FAMILY.top10[,2:5]))
colnames(barplot.data)[1] = "fraction"
n = nrow(asv.filt.abundants.norm.FAMILY.top10)
barplot.data$treatment =c(rep("control",n),rep("fertilization",n),rep("tomato",n),rep("pepper",n))
barplot.data$taxonomy = unlist(rep((asv.filt.abundants.norm.FAMILY.top10[,1]),ncol(asv.filt.abundants.norm.FAMILY.top10)-1))
###ggplot ----
dev.new()
p = ggplot() + labs(title = "Roots - bacteria",fill = "Taxonomy (Family)") +
theme_bw() +
theme(plot.title = element_text(hjust = 0.5, size=14, face="bold")) +
geom_bar(aes(y = fraction, x = treatment, fill = taxonomy),
data = barplot.data,stat="identity")
p + scale_fill_brewer(palette = "Set3")
dev.print(device=pdf, "figures/bacteria/Figure4br_FAMILY_ASVabundance.pdf", onefile=FALSE)
dev.off()
figure4 = multi_panel_figure(width = 14,height = 16, unit = "inch",rows = 2,columns = 2)
figure4 %<>% fill_panel("figures/fungi/Figure4fs_FAMILY_ASVabundance.pdf",row = 1, column = 1)
figure4 %<>% fill_panel("figures/fungi/Figure4fr_FAMILY_ASVabundance.pdf",row = 1, column = 2)
figure4 %<>% fill_panel("figures/bacteria/Figure4bs_FAMILY_ASVabundance.pdf",row = 2, column = 1)
figure4 %<>% fill_panel("figures/bacteria/Figure4br_FAMILY_ASVabundance.pdf",row = 2, column = 2)
figure4 %>% save_multi_panel_figure(filename = "figures/Figure4_barplots.pdf")
dim(taxo)
taxo.abundants[1:5,1:6]
library(knitr)
permanova.summary = read.table("../results/permanova.summary")
colnames(permanova.summary) = c("fungi_soil","fungi_root","bacteria_soil","bacteria-root")
kable(permanova.summary,digits =4,caption = "summary of PERMANOVAs*")
