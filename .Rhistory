taxo.abundants = taxo[asv.singletons>10,]
#what fraction of ASV do you got rid off
print(length(asv.singletons[asv.singletons<10])/length(asv.singletons))
#what percentage of reads did you keep
sum(asv.filt.abundants)/sum(asv.filt)
#relative abundance
asv.filt.abundants.norm = asv.filt.abundants/rowSums(asv.filt.abundants)
###statistal analyses on ASVs----
design = read.table("reference_material/experimental_design.txt", header = TRUE, stringsAsFactors = FALSE)
#keep samples of interest in a new design.keep dataframe.
design.keep = NULL
for(i in 1:nrow(asv.filt.abundants.norm))
{
design.keep = rbind(design.keep,design[design[,2] == rownames(asv.filt.abundants.norm)[i],])
}
asv.filt.abundants.norm.design = cbind(asv.filt.abundants.norm, design.keep)
#select and ASV (here ASV1)
ASV1 = asv.filt.abundants.norm.design[,c(1,(ncol(asv.filt.abundants.norm.design)-9):ncol(asv.filt.abundants.norm.design))]
#linear mixed effect model (block is random) for ASV1 ----
lmm1 <- lme(ASV1~fertilization+species+planted,data = ASV1,random = ~1|bloc/replicate, method = "REML")
anova(lmm1)
#             numDF denDF   F-value p-value
#(Intercept)       1   165 203.32592  <.0001
#fertilization     1   165   2.87183  0.0920
#species           1   165   2.93756  0.0884
#planted           1   165   1.85800  0.1747
###barplots of all ASVs ----
###to look at diversity among fertilization, soil/roots, planted, species----
#first group things according to treatment and species.
asv.filt.abundants.norm.barplot = cbind(colMeans(asv.filt.abundants.norm[design.keep$fertilization == 0, ]),
colMeans(asv.filt.abundants.norm[design.keep$fertilization == 1, ]),
colMeans(asv.filt.abundants.norm[design.keep$species == "tomato", ]),
colMeans(asv.filt.abundants.norm[design.keep$species == "pepper", ]),
colMeans(asv.filt.abundants.norm[design.keep$planted == 0, ]),
colMeans(asv.filt.abundants.norm[design.keep$planted == 1, ]))
colnames(asv.filt.abundants.norm.barplot) = c("control", "fertilization","tomato","pepper","non-planted","planted")
#barplot
barplot.taxo = c(1:nrow(taxo.abundants))
for(i in 1:length(barplot.taxo))
{
barplot.taxo[i]=paste(taxo.abundants[i,2:6],collapse = ";")
}
dev.new()
par(mar=c(16,4,4,2))
barplot(asv.filt.abundants.norm.barplot,beside = F,font = 3, axisnames = TRUE,cex.names = 0.6, cex.lab = 0.6,ylab = "Relative ASV abundance",col = c(cols25(),rep("grey",11000)), las = 3, xpd = TRUE)
legend(0.1,-0.12,fill = cols25()[1:20],legend =  barplot.taxo[1:20],cex = 0.75,xpd =TRUE)
dev.print(device=pdf, "figures/bacteria/Figure4bs_ASVabundance.pdf", onefile=FALSE)
dev.off()
#summarize with dplyr.
#summarize with dplyr by FAMILY
asv.filt.abundants.norm.FAMILY = as.data.frame(asv.filt.abundants.norm.barplot) %>% group_by(taxo.abundants$Family) %>% summarise_all(sum)
write.table(asv.filt.abundants.norm.FAMILY,"results/asv/asv.filt.abundants.norm.FAMILY_bs")
###alpha diversity ----
#prepare a matrix with alpha diversity as "invsimpson" index
asv.filt.abundants.norm.alpha = cbind((vegan::diversity(asv.filt.abundants.norm, index= "invsimpson")^(1/1)),design.keep)
colnames(asv.filt.abundants.norm.alpha)[1] = "alpha"
#linear mixed effect model on alpha diversity (bloc/replicate are random, none of the interactions are significant)
lmm.alpha <- lme(alpha~fertilization+species+planted,data = asv.filt.abundants.norm.alpha,random = ~1|bloc/replicate, method = "REML")
anova(lmm.alpha)
#              numDF denDF   F-value p-value
#(Intercept)       1   165 11971.730  <.0001
#fertilization     1   165    17.131  0.0001
#species           1   165     1.891  0.1709
#planted           1   165   138.925  <.0001
shapiro.test(lmm.alpha$residuals[,1]) #fixed effects are  normaly distributed WITHOUT A sqrt
#W = 0.99111, p-value = 0.2834s
dev.new(width=9, height=7,units = "cm",noRStudioGD = TRUE)
par(mfrow = c(1,1),mar = c(5,5,4,2))
names = expression(italic(control),italic(fertilized),italic(Pepper),italic(Tomato),italic(planted),italic(non-planted))
#
boxplot(asv.filt.abundants.norm.alpha$alpha~asv.filt.abundants.norm.alpha$fertilization,ylab = expression(italic(alpha)~~diversity ("Inverse Simpson Index")),
main = "Soil - Bacteria",xpd = T,main = "Species",font = 2,xlim = c(0.5,6.5),names = c("",""))
text(labels = c("a","b"),x = c(1.2,2.2),y = x$stats[4,]+max(x$stats[5,])/30,cex = 1.5,font =3)
boxplot(asv.filt.abundants.norm.alpha$alpha~asv.filt.abundants.norm.alpha$species,add = T,at = 3:4,names = c("",""))
#text(labels = c("a","b"),x = c(3.2,4.2),y = x$stats[4,]+max(x$stats[5,])/30,cex = 1.5,font =3)
boxplot(asv.filt.abundants.norm.alpha$alpha~asv.filt.abundants.norm.alpha$planted,add = T,at = 5:6,names = c("",""))
text(labels = c("a","b","a","b"),x = c(5.2,6.2),y = x$stats[4,]+max(x$stats[5,])/30,cex = 1.5,font =3)
abline(v = c(2.5,4.5),lty = 2)
mtext(names,side = 1,at = c(1:6),cex =0.8,line = 1)
names = expression(italic(control),italic(fertilized),italic(Pepper),italic(Tomato),italic(planted),italic(non-planted))
dev.new(width=9, height=7,units = "cm",noRStudioGD = TRUE)
par(mfrow = c(1,1),mar = c(5,5,4,2))
names = expression(italic(control),italic(fertilized),italic(Pepper),italic(Tomato),italic(planted),italic(non-planted))
#
boxplot(asv.filt.abundants.norm.alpha$alpha~asv.filt.abundants.norm.alpha$fertilization,ylab = expression(italic(alpha)~~diversity ("Inverse Simpson Index")),
main = "Soil - Bacteria",xpd = T,font = 2,xlim = c(0.5,6.5),names = c("",""))
text(labels = c("a","b"),x = c(1.2,2.2),y = x$stats[4,]+max(x$stats[4,])/30,cex = 1.5,font =3)
boxplot(asv.filt.abundants.norm.alpha$alpha~asv.filt.abundants.norm.alpha$species,add = T,at = 3:4,names = c("",""))
#text(labels = c("a","b"),x = c(3.2,4.2),y = x$stats[4,]+max(x$stats[5,])/30,cex = 1.5,font =3)
boxplot(asv.filt.abundants.norm.alpha$alpha~asv.filt.abundants.norm.alpha$planted,add = T,at = 5:6,names = c("",""))
text(labels = c("a","b","a","b"),x = c(5.2,6.2),y = x$stats[4,]+max(x$stats[4,])/30,cex = 1.5,font =3)
abline(v = c(2.5,4.5),lty = 2)
mtext(names,side = 1,at = c(1:6),cex =0.8,line = 1)
names = expression(italic(control),italic(fertilized),italic(Pepper),italic(Tomato),italic(planted),italic(non-planted))
dev.new(width=9, height=7,units = "cm",noRStudioGD = TRUE)
par(mfrow = c(1,1),mar = c(5,5,4,2))
names = expression(italic(control),italic(fertilized),italic(Pepper),italic(Tomato),italic(planted),italic(non-planted))
#
x = boxplot(asv.filt.abundants.norm.alpha$alpha~asv.filt.abundants.norm.alpha$fertilization,ylab = expression(italic(alpha)~~diversity ("Inverse Simpson Index")),
main = "Soil - Bacteria",xpd = T,font = 2,xlim = c(0.5,6.5),names = c("",""))
text(labels = c("a","b"),x = c(1.2,2.2),y = x$stats[4,]+max(x$stats[4,])/30,cex = 1.5,font =3)
x = boxplot(asv.filt.abundants.norm.alpha$alpha~asv.filt.abundants.norm.alpha$species,add = T,at = 3:4,names = c("",""))
#text(labels = c("a","b"),x = c(3.2,4.2),y = x$stats[4,]+max(x$stats[5,])/30,cex = 1.5,font =3)
x = boxplot(asv.filt.abundants.norm.alpha$alpha~asv.filt.abundants.norm.alpha$planted,add = T,at = 5:6,names = c("",""))
text(labels = c("a","b","a","b"),x = c(5.2,6.2),y = x$stats[4,]+max(x$stats[4,])/30,cex = 1.5,font =3)
abline(v = c(2.5,4.5),lty = 2)
mtext(names,side = 1,at = c(1:6),cex =0.8,line = 1)
names = expression(italic(control),italic(fertilized),italic(Pepper),italic(Tomato),italic(planted),italic(non-planted))
#boxplot it
dev.new(width=9, height=7,units = "cm",noRStudioGD = TRUE)
par(mfrow = c(1,1),mar = c(5,5,4,2))
names = expression(italic(control),italic(fertilized),italic(Pepper),italic(Tomato),italic(planted),italic(non-planted))
#
x = boxplot(asv.filt.abundants.norm.alpha$alpha~asv.filt.abundants.norm.alpha$fertilization,ylab = expression(italic(alpha)~~diversity ("Inverse Simpson Index")),
main = "Soil - Bacteria",xpd = T,font = 2,xlim = c(0.5,6.5),names = c("",""))
text(labels = c("a","b"),x = c(1.2,2.2),y = x$stats[4,]+max(x$stats[4,])/30,cex = 1.5,font =3)
x = boxplot(asv.filt.abundants.norm.alpha$alpha~asv.filt.abundants.norm.alpha$species,add = T,at = 3:4,names = c("",""))
#text(labels = c("a","b"),x = c(3.2,4.2),y = x$stats[4,]+max(x$stats[5,])/30,cex = 1.5,font =3)
x = boxplot(asv.filt.abundants.norm.alpha$alpha~asv.filt.abundants.norm.alpha$planted,add = T,at = 5:6,names = c("",""))
text(labels = c("a","b","a","b"),x = c(5.2,6.2),y = x$stats[4,]+max(x$stats[4,])/30,cex = 1.5,font =3)
abline(v = c(2.5,4.5),lty = 2)
mtext(names,side = 1,at = c(1:6),cex =0.8,line = 1)
names = expression(italic(control),italic(fertilized),italic(Pepper),italic(Tomato),italic(planted),italic(non-planted))
dev.print(device=pdf, "figures/bacteria/Figure4bs_alpha.pdf", onefile=FALSE)
dev.off()
#load ASVS and taxonomy information ----
dev.new()
asv = read.table("results/asv/asv.bacteria_root",row.names = 1, sep = " ",header =TRUE,stringsAsFactors = F)
taxo = read.table("results/asv/asv.taxo.bacteria_root",row.names = 1, sep = " ",header =TRUE,stringsAsFactors = F)
#tidy up ----
#remove the bad samples (below 4 standard deviations...).
asv.sum = rowSums(asv)
min(asv.sum);max(asv.sum)
asv.sum.mean = mean(asv.sum)
asv.sum.sd = sd(asv.sum)
asv.filt = asv[asv.sum > (asv.sum.mean - 4*asv.sum.sd),]
asv.filt = asv[asv.sum > 1000,]
#98% of ASVs are present in less than 5 individuals (5% of samples): this is huge. and justifies the clustering I think for soil bacteria....
asv.singletons = rep(0,ncol(asv.filt))
for(i in 1:ncol(asv.filt))
{
asv.singletons[i] = length(asv.filt[asv.filt[,i]!=0,i])
}
asv.filt.abundants = asv.filt[,asv.singletons>5]
taxo.abundants = taxo[asv.singletons>5,]
#what fraction of ASV did you get rid off
print(length(asv.singletons[asv.singletons<5])/length(asv.singletons))
#what percentage of reads did you keep
sum(asv.filt.abundants)/sum(asv.filt)
#relative abundance
asv.filt.abundants.norm = asv.filt.abundants/rowSums(asv.filt.abundants)
###statistal analyses on ASVs----
design = read.table("reference_material/experimental_design.txt", header = TRUE, stringsAsFactors = FALSE)
#keep samples of interest in a new design.keep dataframe.
design.keep = NULL
for(i in 1:nrow(asv.filt.abundants.norm))
{
design.keep = rbind(design.keep,design[design[,2] == rownames(asv.filt.abundants.norm)[i],])
}
asv.filt.abundants.norm.design = cbind(asv.filt.abundants.norm, design.keep)
#select and ASV (here ASV1)
ASV1 = asv.filt.abundants.norm.design[,c(1,(ncol(asv.filt.abundants.norm.design)-9):ncol(asv.filt.abundants.norm.design))]
#linear mixed effect model  (block & replicate are random, replicate is nested in bloc)/ for ASV1 ----
lmm1 <- lme(ASV1~fertilization+species,data = ASV1,random = ~1|bloc/replicate, method = "REML")
anova(lmm1)
#              numDF denDF   F-value p-value
#(Intercept)       1    68 20102.958  <.0001
#fertilization     1    68    21.868  <.0001
#species           1    68   179.835  <.0001
###barplots of all ASVs ----
###to look at diversity among fertilization, soil/roots, planted, species----
#first group things according to treatment and species.
asv.filt.abundants.norm.barplot = cbind(colMeans(asv.filt.abundants.norm[design.keep$fertilization == 0, ]),
colMeans(asv.filt.abundants.norm[design.keep$fertilization == 1, ]),
colMeans(asv.filt.abundants.norm[design.keep$species == "tomato", ]),
colMeans(asv.filt.abundants.norm[design.keep$species == "pepper", ]))
colnames(asv.filt.abundants.norm.barplot) = c("fertilization", "control","tomato","pepper")
#barplot (TOP20)
barplot.taxo = c(1:nrow(taxo))
for(i in 1:length(barplot.taxo))
{
barplot.taxo[i]=paste(taxo[i,2:6],collapse = ";")
}
dev.new()
par(mar=c(16,4,4,2))
barplot(asv.filt.abundants.norm.barplot,beside = F,font = 3, axisnames = TRUE,ylab = "Relative ASV abundance",col = c(cols25(),rep("grey",650)), las = 3, xpd = TRUE)
legend(0.1,-0.22,fill = cols25()[1:20],legend =  barplot.taxo[1:20],cex = 0.75,xpd =TRUE)
dev.print(device=pdf, "figures/bacteria/Figure4br_ASVabundance.pdf", onefile=FALSE)
dev.off()
###barplot by family ----
#summarize with dplyr by family
asv.filt.abundants.norm.FAMILY = as.data.frame(asv.filt.abundants.norm.barplot) %>% group_by(taxo.abundants$Family) %>% summarise_all(sum)
asv.filt.abundants.norm.FAMILY[47,1] = "chloroplast*"
asv.filt.abundants.norm.FAMILY[26,1] = "mitochondria*"
write.table(asv.filt.abundants.norm.FAMILY,"results/asv/asv.filt.abundants.norm.FAMILY_br")
###alpha diversity ----
#prepare a matrix with alpha diversity as "invsimpson" index
asv.filt.abundants.norm.alpha = cbind(vegan::diversity(asv.filt.abundants.norm, index= "invsimpson")^(1/1),design.keep)
colnames(asv.filt.abundants.norm.alpha)[1] = "alpha"
#linear mixed effect model on alpha diversity (block & replicate are random, replicate is nested in bloc)
lmm.alpha.interactions <- lme(alpha~fertilization*species,data = asv.filt.abundants.norm.alpha,random = ~1|bloc/replicate, method = "REML")
anova(lmm.alpha.interactions) #interactions
#                     numDF denDF  F-value p-value
#(Intercept)               1    68 481.0934  <.0001
#fertilization             1    68  17.2742   1e-04
#species                   1    68 359.6885  <.0001
#fertilization:species     1    68  17.5512   1e-04
shapiro.test(lmm.alpha.interactions$residuals) #normaly distributed (otherwise can do a log or sqrt?)
#W = 0.91509, p-value = 1.251e-11
#boxplot it?
dev.new(width=7, height=7,units = "cm",noRStudioGD = TRUE)
par(mfrow = c(1,1),mar = c(5,4,4,2))
names = expression(italic(control),italic(fertilized),italic(Pepper),italic(Tomato))
#
x=boxplot(asv.filt.abundants.norm.alpha$alpha~asv.filt.abundants.norm.alpha$fertilization,ylab = expression(italic(alpha)~~diversity ("Inverse Simpson Index")),
main = "Roots - Bacteria",xpd = T,main = "Species",font = 2,xlim = c(0.5,4.5),names = c("",""))
text(labels = c("a","b"),x = c(1.2,2.2),y = x$stats[4,]+max(x$stats[4,])/30,cex = 1.5,font =3)
x=boxplot(asv.filt.abundants.norm.alpha$alpha~asv.filt.abundants.norm.alpha$species,add = T,at = 3:4,names = c("",""))
text(labels = c("a","b"),x = c(3.2,4.2),y = x$stats[4,]+max(x$stats[5,])/30,cex = 1.5,font =3)
abline(v = 2.5,lty = 2)
mtext(names,side = 1,at = c(1:4),cex =0.8,line = 1)
dev.new(width=7, height=7,units = "cm",noRStudioGD = TRUE)
par(mfrow = c(1,1),mar = c(5,4,4,2))
names = expression(italic(control),italic(fertilized),italic(Pepper),italic(Tomato))
#
x=boxplot(asv.filt.abundants.norm.alpha$alpha~asv.filt.abundants.norm.alpha$fertilization,ylab = expression(italic(alpha)~~diversity ("Inverse Simpson Index")),
main = "Roots - Bacteria",xpd = T,main = "Species",font = 2,xlim = c(0.5,4.5),names = c("",""))
text(labels = c("a","b"),x = c(1.2,2.2),y = x$stats[4,]+max(x$stats[4,])/20,cex = 1.5,font =3)
x=boxplot(asv.filt.abundants.norm.alpha$alpha~asv.filt.abundants.norm.alpha$species,add = T,at = 3:4,names = c("",""))
text(labels = c("a","b"),x = c(3.2,4.2),y = x$stats[4,]+max(x$stats[5,])/20,cex = 1.5,font =3)
abline(v = 2.5,lty = 2)
mtext(names,side = 1,at = c(1:4),cex =0.8,line = 1)
dev.print(device=pdf, "figures/bacteria/Figure4br_alpha.pdf", onefile=FALSE)
dev.off()
dev.new()
asv = read.table("results/asv/asv.fungi_root",row.names = 1, sep = " ",header =TRUE,stringsAsFactors = F)
taxo = read.table("results/asv/asv.taxo.fungi_root",row.names = 1, sep = " ",header =TRUE,stringsAsFactors = F)
#tidy up ----
#remove the bad samples (below 4 standard deviations...).
asv.sum = rowSums(asv)
min(asv.sum);max(asv.sum)
asv.sum.mean = mean(asv.sum)
asv.sum.sd = sd(asv.sum)
asv.filt = asv[asv.sum > (asv.sum.mean - 4*asv.sum.sd),]
asv.filt = asv[asv.sum > 1000,]
#98% of ASVs are present in less than 5 individuals (5% of samples): this is huge. and justifies the clustering I think for soil bacteria....
asv.singletons = rep(0,ncol(asv.filt))
for(i in 1:ncol(asv.filt))
{
asv.singletons[i] = length(asv.filt[asv.filt[,i]!=0,i])
}
asv.filt.abundants = asv.filt[,asv.singletons>5]
taxo.abundants = taxo[asv.singletons>5,]
#what fraction of ASV do you got rid off
print(length(asv.singletons[asv.singletons<5])/length(asv.singletons))
#what percentage of reads did you keep
sum(asv.filt.abundants)/sum(asv.filt)
#relative abundance
asv.filt.abundants.norm = asv.filt.abundants/rowSums(asv.filt.abundants)
###statistal analyses on ASVs----
design = read.table("reference_material/experimental_design.txt", header = TRUE, stringsAsFactors = FALSE)
#keep samples of interest in a new design.keep dataframe.
design.keep = NULL
for(i in 1:nrow(asv.filt.abundants.norm))
{
design.keep = rbind(design.keep,design[design[,2] == rownames(asv.filt.abundants.norm)[i],])
}
asv.filt.abundants.norm.design = cbind(asv.filt.abundants.norm, design.keep)
#select and ASV (here ASV1)
ASV1 = asv.filt.abundants.norm.design[,c(1,(ncol(asv.filt.abundants.norm.design)-9):ncol(asv.filt.abundants.norm.design))]
#linear mixed effect model  (block & replicate are random, replicate is nested in bloc)/ for ASV1 ----
lmm1 <- lme(ASV1~fertilization+species,data = ASV1,random = ~1|bloc/replicate, method = "REML")
anova(lmm1)
#               numDF denDF  F-value p-value
#(Intercept)       1    55 596.9096  <.0001
#fertilization     1    55   4.8193  0.0324
#species           1    55  12.3121  0.0009
###barplots of all ASVs ----
###to look at diversity among fertilization, soil/roots, planted, species----
#first group things according to treatment and species.
asv.filt.abundants.norm.barplot = cbind(colMeans(asv.filt.abundants.norm[design.keep$fertilization == 0, ]),
colMeans(asv.filt.abundants.norm[design.keep$fertilization == 1, ]),
colMeans(asv.filt.abundants.norm[design.keep$species == "tomato", ]),
colMeans(asv.filt.abundants.norm[design.keep$species == "pepper", ]))
colnames(asv.filt.abundants.norm.barplot) = c("fertilization", "control","tomato","pepper")
#barplot (TOP20)
barplot.taxo = c(1:nrow(taxo))
for(i in 1:length(barplot.taxo))
{
barplot.taxo[i]=paste(taxo[i,2:6],collapse = ";")
}
dev.new()
par(mar=c(16,4,4,2))
barplot(asv.filt.abundants.norm.barplot,beside = F,font = 3, axisnames = TRUE,ylab = "Relative ASV abundance",col = c(cols25(),rep("grey",10000)), las = 3, xpd = TRUE)
legend(0.1,-0.22,fill = cols25()[1:20],legend =  barplot.taxo[1:20],cex = 0.75,xpd =TRUE)
dev.print(device=pdf, "figures/fungi/Figure4fr_ASVabundance.pdf", onefile=FALSE)
dev.off()
#summarize with dplyr.
#summarize with dplyr by FAMILY
asv.filt.abundants.norm.FAMILY = as.data.frame(asv.filt.abundants.norm.barplot) %>% group_by(taxo.abundants$Family) %>% summarise_all(sum)
write.table(asv.filt.abundants.norm.FAMILY,"results/asv/asv.filt.abundants.norm.FAMILY_fr")
###alpha diversity ----
#prepare a matrix with alpha diversity as "invsimpson" index
asv.filt.abundants.norm.alpha = cbind((vegan::diversity(asv.filt.abundants.norm, index= "invsimpson"))^(1/2),design.keep)
colnames(asv.filt.abundants.norm.alpha)[1] = "alpha"
#linear mixed effect model on alpha diversity (block & replicate are random, replicate is nested in bloc)
lmm.alpha.interactions <- lme(alpha~fertilization*species,data = asv.filt.abundants.norm.alpha,random = ~1|bloc/replicate, method = "REML")
anova(lmm.alpha.interactions)
#                       numDF denDF   F-value p-value
#(Intercept)               1    54 729.5858  <.0001
#fertilization             1    54  10.0908  0.0025
#species                   1    54   4.4958  0.0386
#fertilization:species     1    54   0.3433  0.5604
shapiro.test(lmm.alpha.interactions$residuals[,1]) #normaly distributed SQUARE ROOT
#W = 0.9427, p-value = 0.001243
#boxplot it?
#boxplot it
dev.new(width=7, height=7,units = "cm",noRStudioGD = TRUE)
par(mfrow = c(1,1),mar = c(5,4,4,2))
names = expression(italic(control),italic(fertilized),italic(Pepper),italic(Tomato))
#
x=boxplot(asv.filt.abundants.norm.alpha$alpha~asv.filt.abundants.norm.alpha$fertilization,ylab = expression(italic(alpha)~~diversity ("Inverse Simpson Index")),
main = "Roots - Fungi",xpd = T,font = 2,xlim = c(0.5,4.5),names = c("",""))
text(labels = c("a","b"),x = c(1.2,2.2),y = x$stats[4,]+max(x$stats[4,])/20,cex = 1.5,font =3)
x=boxplot(asv.filt.abundants.norm.alpha$alpha~asv.filt.abundants.norm.alpha$species,add = T,at = 3:4,names = c("",""))
text(labels = c("a","b"),x = c(3.2,4.2),y = x$stats[4,]+max(x$stats[5,])/20,cex = 1.5,font =3)
#boxplot it?
#boxplot it
dev.new(width=7, height=7,units = "cm",noRStudioGD = TRUE)
par(mfrow = c(1,1),mar = c(5,4,4,2))
names = expression(italic(control),italic(fertilized),italic(Pepper),italic(Tomato))
#
x=boxplot(asv.filt.abundants.norm.alpha$alpha~asv.filt.abundants.norm.alpha$fertilization,ylab = expression(italic(alpha)~~diversity ("Inverse Simpson Index")),
main = "Roots - Fungi",xpd = T,font = 2,xlim = c(0.5,4.5),names = c("",""))
text(labels = c("a","b"),x = c(1.2,2.2),y = x$stats[4,]+max(x$stats[4,])/30,cex = 1.5,font =3)
x=boxplot(asv.filt.abundants.norm.alpha$alpha~asv.filt.abundants.norm.alpha$species,add = T,at = 3:4,names = c("",""))
text(labels = c("a","b"),x = c(3.2,4.2),y = x$stats[4,]+max(x$stats[5,])/30,cex = 1.5,font =3)
abline(v = 2.5,lty = 2)
mtext(names,side = 1,at = c(1:4),cex =0.8,line = 1)
figure5 = multi_panel_figure(width = 18,height = 14, unit = "inch",rows = 2,columns = 2)
figure5 %<>% fill_panel("figures/fungi/Figure4fs_alpha.pdf",row = 1, column = 1)
figure5 %<>% fill_panel("figures/fungi/Figure4fr_alpha.pdf",row = 1, column = 2)
figure5 %<>% fill_panel("figures/bacteria/Figure4bs_alpha.pdf",row = 2, column = 1)
figure5 %<>% fill_panel("figures/bacteria/Figure4br_alpha.pdf",row = 2, column = 2)
figure5 %>% save_multi_panel_figure(filename = "figures/Figure5_alpha.pdf")
dev.new(width=7, height=7,units = "cm",noRStudioGD = TRUE)
par(mfrow = c(1,1),mar = c(5,4,4,2))
names = expression(italic(control),italic(fertilized),italic(Pepper),italic(Tomato))
#
x=boxplot(asv.filt.abundants.norm.alpha$alpha~asv.filt.abundants.norm.alpha$fertilization,ylab = expression(italic(alpha)~~diversity ("Inverse Simpson Index")),
main = "Roots - Fungi",xpd = T,font = 2,xlim = c(0.5,4.5),names = c("",""))
text(labels = c("a","b"),x = c(1.2,2.2),y = x$stats[4,]+max(x$stats[4,])/30,cex = 1.5,font =3)
x=boxplot(asv.filt.abundants.norm.alpha$alpha~asv.filt.abundants.norm.alpha$species,add = T,at = 3:4,names = c("",""))
text(labels = c("a","b"),x = c(3.2,4.2),y = x$stats[4,]+max(x$stats[5,])/30,cex = 1.5,font =3)
abline(v = 2.5,lty = 2)
mtext(names,side = 1,at = c(1:4),cex =0.8,line = 1)
dev.print(device=pdf, "figures/fungi/Figure4fr_alpha.pdf", onefile=FALSE)
dev.off()
figure5 = multi_panel_figure(width = 18,height = 14, unit = "inch",rows = 2,columns = 2)
figure5 %<>% fill_panel("figures/fungi/Figure4fs_alpha.pdf",row = 1, column = 1)
figure5 %<>% fill_panel("figures/fungi/Figure4fr_alpha.pdf",row = 1, column = 2)
figure5 %<>% fill_panel("figures/bacteria/Figure4bs_alpha.pdf",row = 2, column = 1)
figure5 %<>% fill_panel("figures/bacteria/Figure4br_alpha.pdf",row = 2, column = 2)
figure5 %>% save_multi_panel_figure(filename = "figures/Figure5_alpha.pdf")
dev.off()
dev.off()
dev.off()
dev.off()
dev.off()
dev.off()
dev.off()
dev.off()
dev.off()
dev.off()
dev.off()
setwd("/Users/jerry/Documents/CSBQ/hijri/Acadian_seaplants")
#Tree of candidate ASVs with taxonomy infos---
conditions = c("br","bs","fr","fs")
candidate.ASV.all = NULL
for(i in 1:4)
{
candidate.ASV = read.table(paste("results/candidate.ASV.",conditions[i],".txt",sep = ""),stringsAsFactors = F)
if(ncol(candidate.ASV) == 11) {candidate.ASV = candidate.ASV[,c(1:11,11)];candidate.ASV[,11] = "na";colnames(candidate.ASV)[11:12]  = c("Species","X")}
candidate.ASV$condition = conditions[i]
print(dim(candidate.ASV))
candidate.ASV.all = rbind(candidate.ASV.all,candidate.ASV)
}
#collapse taxo info.
candidate.ASV.all$names_collapse = NULL
for(i in 1:80)
{
candidate.ASV.all$names_collapse[i]=paste(candidate.ASV.all[i,c(1,6:11)],collapse = ";")
candidate.ASV.all$names_collapse[i]=gsub(";NA","",candidate.ASV.all$names_collapse[i],ignore.case=T)
#how far along the taxo did you get...
len = length(gregexpr(";",candidate.ASV.all$names_collapse[i])[[1]])
len.exact = paste("(",colnames(candidate.ASV.all)[5+len],")",sep= "")
#get only the ASV + last part of the taxonomy
temp_taxo=strsplit(candidate.ASV.all$names_collapse[i],split = ";")[[1]]
if(length(temp_taxo)==1) candidate.ASV.all$names_collapse[i] = temp_taxo
if(length(temp_taxo)>1) candidate.ASV.all$names_collapse[i] = paste(temp_taxo[1],temp_taxo[length(temp_taxo)],len.exact,collapse = ";")
}
for(taxa in c("Bacteria","Fungi"))
{
###get phylo ----
seqs <- candidate.ASV.all[candidate.ASV.all$Kingdom==taxa,12]
names(seqs) <- candidate.ASV.all$names_collapse[candidate.ASV.all$Kingdom==taxa] # This propagates to the tip labels of the tree
alignment <- AlignSeqs(DNAStringSet(seqs), anchor=NA)
phang.align <- phyDat(as(alignment, "matrix"), type="DNA") #sequence alignments
dm <- dist.ml(phang.align) #build distance matrix
treeNJ <- NJ(dm) # Note, tip order != sequence order
#plot phylo based on distance matrix----
tip.color = c(1:80)
for(i in 1:length(tip.color))
{
#get some nice colors to show up.
if((candidate.ASV.all[i,4] == "Tomato") & (candidate.ASV.all[i,13] == "br")) tip.color[i] = "darkred"
if((candidate.ASV.all[i,4] == "Tomato") & (candidate.ASV.all[i,13] == "bs")) tip.color[i] = "darkorange2"
if((candidate.ASV.all[i,4] == "Pepper") & (candidate.ASV.all[i,13] == "br")) tip.color[i] = "cyan4"
if((candidate.ASV.all[i,4] == "Pepper") & (candidate.ASV.all[i,13] == "bs")) tip.color[i] = "darkblue"
if((candidate.ASV.all[i,4] == "Tomato") & (candidate.ASV.all[i,13] == "fr")) tip.color[i] = "darkred"
if((candidate.ASV.all[i,4] == "Tomato") & (candidate.ASV.all[i,13] == "fs")) tip.color[i] = "darkorange2"
if((candidate.ASV.all[i,4] == "Pepper") & (candidate.ASV.all[i,13] == "fr")) tip.color[i] = "cyan4"
if((candidate.ASV.all[i,4] == "Pepper") & (candidate.ASV.all[i,13] == "fs")) tip.color[i] = "darkblue"
}
#plot.phylo
dev.new()
plot.phylo(treeNJ,cex = 0.5,tip.color = tip.color[candidate.ASV.all$Kingdom==taxa],font = 2,main = taxa,xpd = T)
if(taxa == "Fungi") legend(0.02,40,legend =  c("Tomato - root","Tomato - soil","Pepper - root","Pepper - soil"), fill = c("darkred","darkorange2","cyan4","darkblue"),bg = "#FFFFFF69")
if(taxa == "Bacteria") legend(0.02,40,legend =  c("Tomato - root","Tomato - soil","Pepper - root","Pepper - soil"), fill = c("darkred","darkorange2","cyan4","darkblue"),bg = "#FFFFFF69")
dev.print(device=pdf, paste("figures/",tolower(taxa),"/Figure7_",tolower(taxa),"_tree.pdf",sep = ""), onefile=FALSE)
dev.off()
}
#Figure 7 - trees -----
figure7 = multi_panel_figure(width = 14,height = 7, unit = "inch",rows = 1,columns = 2)
figure7 %<>% fill_panel("figures/bacteria/Figure7_bacteria_tree.pdf",row = 1, column = 2)
figure7 %<>% fill_panel("figures/fungi/Figure7_fungi_tree.pdf",row = 1, column = 1)
figure7 %>% save_multi_panel_figure(filename = "figures/Figure7_candidateASVs.pdf")
#Figure 7 - candidates
taxa
seqs <- candidate.ASV.all[candidate.ASV.all$Kingdom==taxa,12]
names(seqs) <- candidate.ASV.all$names_collapse[candidate.ASV.all$Kingdom==taxa] # This propagates to the tip labels of the tree
alignment <- AlignSeqs(DNAStringSet(seqs), anchor=NA)
phang.align <- phyDat(as(alignment, "matrix"), type="DNA") #sequence alignments
dm <- dist.ml(phang.align) #build distance matrix
treeNJ <- NJ(dm) # Note, tip order != sequence order
#plot phylo based on distance matrix----
tip.color = c(1:80)
for(i in 1:length(tip.color))
{
#get some nice colors to show up.
if((candidate.ASV.all[i,4] == "Tomato") & (candidate.ASV.all[i,13] == "br")) tip.color[i] = "darkred"
if((candidate.ASV.all[i,4] == "Tomato") & (candidate.ASV.all[i,13] == "bs")) tip.color[i] = "darkorange2"
if((candidate.ASV.all[i,4] == "Pepper") & (candidate.ASV.all[i,13] == "br")) tip.color[i] = "cyan4"
if((candidate.ASV.all[i,4] == "Pepper") & (candidate.ASV.all[i,13] == "bs")) tip.color[i] = "darkblue"
if((candidate.ASV.all[i,4] == "Tomato") & (candidate.ASV.all[i,13] == "fr")) tip.color[i] = "darkred"
if((candidate.ASV.all[i,4] == "Tomato") & (candidate.ASV.all[i,13] == "fs")) tip.color[i] = "darkorange2"
if((candidate.ASV.all[i,4] == "Pepper") & (candidate.ASV.all[i,13] == "fr")) tip.color[i] = "cyan4"
if((candidate.ASV.all[i,4] == "Pepper") & (candidate.ASV.all[i,13] == "fs")) tip.color[i] = "darkblue"
}
#plot.phylo
dev.new()
plot.phylo(treeNJ,cex = 0.5,tip.color = tip.color[candidate.ASV.all$Kingdom==taxa],font = 2,main = taxa,xpd = T)
if(taxa == "Fungi") legend(0.02,40,legend =  c("Tomato - root","Tomato - soil","Pepper - root","Pepper - soil"), fill = c("darkred","darkorange2","cyan4","darkblue"),bg = "#FFFFFF69")
if(taxa == "Bacteria") legend(0.02,40,legend =  c("Tomato - root","Tomato - soil","Pepper - root","Pepper - soil"), fill = c("darkred","darkorange2","cyan4","darkblue"),bg = "#FFFFFF69")
dev.new()
plot.phylo(treeNJ,cex = 0.5,tip.color = tip.color[candidate.ASV.all$Kingdom==taxa],font = 2,main = taxa,xpd = T)
if(taxa == "Fungi") legend(0.02,40,legend =  c("Tomato - root","Tomato - soil","Pepper - root","Pepper - soil"), fill = c("darkred","darkorange2","cyan4","darkblue"),bg = "#FFFFFF19")
if(taxa == "Bacteria") legend(0.02,40,legend =  c("Tomato - root","Tomato - soil","Pepper - root","Pepper - soil"), fill = c("darkred","darkorange2","cyan4","darkblue"),bg = "#FFFFFF19")
dev.new()
plot.phylo(treeNJ,cex = 0.5,tip.color = tip.color[candidate.ASV.all$Kingdom==taxa],font = 2,main = taxa,xpd = T)
if(taxa == "Fungi") legend(0.02,40,legend =  c("Tomato - root","Tomato - soil","Pepper - root","Pepper - soil"), fill = c("darkred","darkorange2","cyan4","darkblue"),bg = "#FFFFFFCC")
if(taxa == "Bacteria") legend(0.02,40,legend =  c("Tomato - root","Tomato - soil","Pepper - root","Pepper - soil"), fill = c("darkred","darkorange2","cyan4","darkblue"),bg = "#FFFFFFCC")
for(taxa in c("Bacteria","Fungi"))
{
###get phylo ----
seqs <- candidate.ASV.all[candidate.ASV.all$Kingdom==taxa,12]
names(seqs) <- candidate.ASV.all$names_collapse[candidate.ASV.all$Kingdom==taxa] # This propagates to the tip labels of the tree
alignment <- AlignSeqs(DNAStringSet(seqs), anchor=NA)
phang.align <- phyDat(as(alignment, "matrix"), type="DNA") #sequence alignments
dm <- dist.ml(phang.align) #build distance matrix
treeNJ <- NJ(dm) # Note, tip order != sequence order
#plot phylo based on distance matrix----
tip.color = c(1:80)
for(i in 1:length(tip.color))
{
#get some nice colors to show up.
if((candidate.ASV.all[i,4] == "Tomato") & (candidate.ASV.all[i,13] == "br")) tip.color[i] = "darkred"
if((candidate.ASV.all[i,4] == "Tomato") & (candidate.ASV.all[i,13] == "bs")) tip.color[i] = "darkorange2"
if((candidate.ASV.all[i,4] == "Pepper") & (candidate.ASV.all[i,13] == "br")) tip.color[i] = "cyan4"
if((candidate.ASV.all[i,4] == "Pepper") & (candidate.ASV.all[i,13] == "bs")) tip.color[i] = "darkblue"
if((candidate.ASV.all[i,4] == "Tomato") & (candidate.ASV.all[i,13] == "fr")) tip.color[i] = "darkred"
if((candidate.ASV.all[i,4] == "Tomato") & (candidate.ASV.all[i,13] == "fs")) tip.color[i] = "darkorange2"
if((candidate.ASV.all[i,4] == "Pepper") & (candidate.ASV.all[i,13] == "fr")) tip.color[i] = "cyan4"
if((candidate.ASV.all[i,4] == "Pepper") & (candidate.ASV.all[i,13] == "fs")) tip.color[i] = "darkblue"
}
#plot.phylo
dev.new()
plot.phylo(treeNJ,cex = 0.5,tip.color = tip.color[candidate.ASV.all$Kingdom==taxa],font = 2,main = taxa,xpd = T)
if(taxa == "Fungi") legend(0.02,40,legend =  c("Tomato - root","Tomato - soil","Pepper - root","Pepper - soil"), fill = c("darkred","darkorange2","cyan4","darkblue"),bg = "#FFFFFFCC")
if(taxa == "Bacteria") legend(0.02,40,legend =  c("Tomato - root","Tomato - soil","Pepper - root","Pepper - soil"), fill = c("darkred","darkorange2","cyan4","darkblue"),bg = "#FFFFFFCC")
dev.print(device=pdf, paste("figures/",tolower(taxa),"/Figure7_",tolower(taxa),"_tree.pdf",sep = ""), onefile=FALSE)
dev.off()
}
#Figure 7 - trees -----
figure7 = multi_panel_figure(width = 14,height = 7, unit = "inch",rows = 1,columns = 2)
figure7 %<>% fill_panel("figures/bacteria/Figure7_bacteria_tree.pdf",row = 1, column = 2)
figure7 %<>% fill_panel("figures/fungi/Figure7_fungi_tree.pdf",row = 1, column = 1)
figure7 %>% save_multi_panel_figure(filename = "figures/Figure7_candidateASVs.pdf")
figure7 = multi_panel_figure(width = 14,height = 7, unit = "inch",rows = 1,columns = 2)
figure7 %<>% fill_panel("figures/fungi/Figure7_fungi_tree.pdf",row = 1, column = 1)
figure7 %<>% fill_panel("figures/bacteria/Figure7_bacteria_tree.pdf",row = 1, column = 2)
figure7 %>% save_multi_panel_figure(filename = "figures/Figure7_candidateASVs.pdf")
