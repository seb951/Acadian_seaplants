install.packages("pheatmap")
library(pheatmap)
getwd()
setwd("~/")
/Users/jerry/Desktop/metab
getwd()
system("ls")
system("ls *pdf")
system("ls *png")
?ad.factor
data(bird)
data(birds)
data(bird.order)
ex = matrix(c(1:100),nrow = 20, ncol = 5)
ex
as.factor(ex[,5])
ex
str(ex)
ex = data.framematrix(c(1:100),nrow = 20, ncol = 5))
ex = data.frame(matrix(c(1:100),nrow = 20, ncol = 5))
ex
ex$test = c("a","b","c")
ex$test = c("a",rep("b",19))
ex
str(ex)
ex$test = as.factor(c("a",rep("b",19)))
ex
str(ex)
ex$test[2] = "c"
str(ex$test[2])
as.data.frame(ex$test[2])
as.data.frame(ex$test)
as.data.frame(ex$test, factor = "a","b","c")
as.data.frame(ex$test, factor = c("a","b","c"))
ex$test
?factor
factor(ex$test)
factor(1:10)
factor(c("a","b","c"))
ex$test = factor(c("a","b","c"))
str(ex$test)
summary(ex$test)
ex$test = factor(rep("a",20))
ex$test = factor(rep("d",20))
str(ex$test)
ex$test = factor((rep("d",10),"e"))
ex$test = factor(c(rep("d",10),"e"))
ex$test = factor(c(rep("d",19),"e"))
ex
str(ex)
ex2 = ex[1:19,]
str(ex2)
ex2
ex3 = rbind(ex2,c(1,1,1,1,""f))
ex3 = rbind(ex2,c(1,1,1,1,"f"))
x = sample(10)
?rnorm
rnorm(1)
rnorm(2)
hist(rnorm(100))
x = rnorm(100)
y = jitter(x)
cor(x,y)
cor.test(x,y)
?cor.test
y = jitter(x,100)
cor.test(x,y)
plot(x,y)
y = jitter(x,1000)
plot(x,y)
cor.test(x,y)
z = rnorm(100,1)
hist(x)
hist(z)
hist(c(z,y,x))
z = rnorm(1000,1)
x = rnorm(1000)
y = jitter(x,1000)
hist(c(z,y,x))
hist(c(z,y,x),breaks=100)
z = rnorm(1000,4)
hist(c(z,y,x),breaks=100)
z = rnorm(1000,2)
hist(c(z,y,x),breaks=100)
t.test(z,x)
ks.test(z,x)
kruskal.test(z,x)
t.test(z,x)
t.test(z,x,y)
t.test(z,x)
n = t.test(z,x)
n
str(n)
n = lm(z~x)
n
anova(n)
mean(z)
mean(x)
stage = c(rep("a",500),rep("b",300),rep("c",200))
lm(x~y*c)
lm(x~y*stage)
anova(lm(x~y*stage))
summary(lm(x~y*stage))
hist(c(z,y,x),breaks=100)
hist(c(y,x),breaks=100)
hist(c(y,x),breaks=100,add =T)
hist(c(y,x),breaks=100,add =T)
hist(c(y,x),breaks=100,add =T)
hist(c(y,x),breaks=100,add =T)
hist(c(y,x),breaks=100)
hist(c(z),breaks=100,add =T)
hist(c(y,x),breaks=100)
hist(c(z),breaks=100,add =T,col = "red")
hist(c(z),breaks=100,add =T,col = "red")
hist(c(y,x),breaks=100,xlim = (-4,10))
hist(c(y,x),breaks=100,xlim = c(-4,10))
hist(c(z),breaks=100,add =T,col = "red")
hist(c(y,x),breaks=100,xlim = c(-4,6))
hist(c(z),breaks=100,add =T,col = "red")
t.test(x,c(yx))
t.test(x,c(y,x))
t.test(z,c(y,x))
kruskal.test(z,c(y,x))
kruskal.test(z,c(y))
t.test(z,c(y))
?kruskal.test
z = rnorm(1000,10)
t.test(z,c(y))
hist(c(y,x),breaks=100,xlim = c(-4,6))
hist(c(y,x),breaks=100,xlim = c(-4,1))
dev.new()
hist(c(y,x),breaks=100,xlim = c(-4,15))
hist(c(z),breaks=100,add =T,col = "red")
knit_with_parameters('~/Documents/protocols_documentation/plot_phylogeny_inR/phylo_plot_02_03_2018.Rmd')
420/375
375.1.1
375*1.1
375*1.12
library(DESeq2)
?DESeq2
?DESeq
getwd()
#combining figures
library(multipanelfigure)
library(magrittr)
library(dplyr)
library(DECIPHER)
library(phangorn)
library(phyloseq)
library(NJ)
?NJ
?rda
library(nlme)
?rda
library(ape)
?rda
library(vegan)
?rda
getwd()
install.packages('tinytex')
install.packages("tinytex")
librar(tinytext)
librar(tinytex)
library(tinytex)
install.packages("rticles")
install.packages("rsconnect")
rsconnect::setAccountInfo(name='sebastien',
token='9EC11C1F1441B6D968993E601C5F854D',
secret='<SECRET>')
rsconnect::setAccountInfo(name='sebastien',
token='9EC11C1F1441B6D968993E601C5F854D',
secret='12coregon')
rsconnect::setAccountInfo(name='sebastien',
token='9EC11C1F1441B6D968993E601C5F854D',
secret='zsFPQ/7ckRkrzuaaEatBRIf0B24nXxhAM+NcY/V9')
rsconnect::deployApp('/private/var/folders/6s/zz6h_vjs7f31cy2bxcjfcfg80000gn/T/RtmpAv0Rah/file39b4c14d6bf.html')
rsconnect::deployApp()
rsconnect::deployApp("/private/var/folders/6s/zz6h_vjs7f31cy2bxcjfcfg80000gn/T/RtmpAv0Rah/")
faithful
head(faithful)
?system.file
system.file("examples/06_tabsets", package = "shiny")
system.file("examples/06_tabsets", package = "shiny")
x = read.table("/Library/Frameworks/R.framework/Versions/3.4/Resources/library/shiny/examples/06_tabsets")
?reactive
iris
?pageWithSidebar
library(shiny)
?pageWithSidebar
?reactive
server.R = function(input, output, session) {
# Combine the selected variables into a new data frame
selectedData <- reactive({
iris[, c(input$xcol, input$ycol)]
})
clusters <- reactive({
kmeans(selectedData(), input$clusters)
})
output$plot1 <- renderPlot({
palette(c("#E41A1C", "#377EB8", "#4DAF4A", "#984EA3",
"#FF7F00", "#FFFF33", "#A65628", "#F781BF", "#999999"))
par(mar = c(5.1, 4.1, 0, 1))
plot(selectedData(),
col = clusters()$cluster,
pch = 20, cex = 3)
points(clusters()$centers, pch = 4, cex = 4, lwd = 4)
})
}
server.R
?inputPanel
?runif
library(pals)
cols25()
(218-15)/218
17+6+8+1+8+137+4+4+7+4+3+4+10+5
(17+6+8+1+8+137+4+4+7+4+3+4+10+5)*0.78
218-170
137+4+8+8+1
137+4+8+8+1+6
knitr::opts_chunk$set(echo = TRUE)
#This is an example using include = T, message = T, warning=T, echo = T, fig.cap="Figure 1".
x = rexp(1000)
min(x)
max(x)
plot(x)
library(tinytex)
install.packages("tinytex")
head(faithful)
?density
?include_graphics
library(shiny)
?system.file
knitr::include_graphics("/Users/jerry/Dropbox/CSBQ/workshop/Rmarkdown/Rmarkdown/figures/shiny.png")
install.packages("rsconnect")
install.packages("rsconnect")
rsconnect::setAccountInfo(name='sebastien',token='9EC11C1F1441B6D968993E601C5F854D',secret='<SECRET>')
rsconnect::setAccountInfo(name='sebastien',
token='9EC11C1F1441B6D968993E601C5F854D',
secret='12coregon')
rsconnect::setAccountInfo(name='sebastien',
token='9EC11C1F1441B6D968993E601C5F854D',
secret='zsFPQ/7ckRkrzuaaEatBRIf0B24nXxhAM+NcY/V9')
library(ggplot2)
?facets
?facet
.libPaths()
2^8
2^9
?sliderInput
sliderInput
library(shiny)
?sliderInput
?shinyApp
getwd()
23/16
21/23
31/23
0.88*1.2
0.88*1.1
0.88*1.15
?rmarkdown
head(pressure)
knitr::opts_chunk$set(echo = TRUE)
#This is an example using include = T, message = T, warning=T, echo = T, fig.cap="Figure 1".
x = rexp(1000)
min(x)
max(x)
plot(x)
#This is an example using include = T, message = T, warning=T, echo = T, fig.cap="Figure 1".
x = rexp(1000)
min(x)
max(x)
plot(x)
install.packages("tinytex")
library(tinytex)
tinytex::install_tinytex()
library(knitr)
summary.table=read.table("../results/summary.table",header = T,row.names = 1)
colnames(summary.table)[2] = "Nb_seq_sum"
summary.table[,2] = summary.table[,2]*1000
summary.table=t(summary.table[c(4:1),])
summary.table[1,] = c(192,96,192,96)
summary.table = summary.table[c(2:6,1,9,8,10,7),]
kable(summary.table,format.args=list(big.mark = ','), digits =4,caption = "Sequencing and ASV summary")
library(knitr)
permanova.summary = read.table("../results/permanova.summary")
colnames(permanova.summary) = c("fungi_soil","fungi_root","bacteria_soil","bacteria-root")
kable(permanova.summary,digits =4,caption = "summary of PERMANOVAs*")
library(knitr)
permanova.summary = read.table("../results/permanova.summary")
colnames(permanova.summary) = c("fungi_soil","fungi_root","bacteria_soil","bacteria-root")
kable(permanova.summary,digits =4,caption = "summary of PERMANOVAs*")
library(knitr)
permanova.summary = read.table("../results/permanova.summary")
colnames(permanova.summary) = c("fungi_soil","fungi_root","bacteria_soil","bacteria-root")
kable(permanova.summary,digits =4,caption = "summary of PERMANOVAs*")
permanova.summary = read.table("../results/permanova.summary")
getwd()
setwd("/Users/jerry/Documents/CSBQ/hijri/Acadian_seaplants/")
permanova.summary = read.table("results/permanova.summary")
permanova.summary
library(knitr)
permanova.summary = read.table("../results/permanova.summary")
colnames(permanova.summary) = c("fungi_soil","fungi_root","bacteria_soil","bacteria-root")
kable(permanova.summary,digits =4,caption = "summary of PERMANOVAs*")
library(knitr)
permanova.summary = read.table("../results/permanova.summary")
colnames(permanova.summary) = c("fungi_soil","fungi_root","bacteria_soil","bacteria-root")
kable(permanova.summary,digits =4,caption = "summary of PERMANOVAs*")
