install.packages("pheatmap")
library(pheatmap)
getwd()
setwd("~/")
/Users/jerry/Desktop/metab
getwd()
system("ls")
system("ls *pdf")
system("ls *png")
?ad.factor
data(bird)
data(birds)
data(bird.order)
ex = matrix(c(1:100),nrow = 20, ncol = 5)
ex
as.factor(ex[,5])
ex
str(ex)
ex = data.framematrix(c(1:100),nrow = 20, ncol = 5))
ex = data.frame(matrix(c(1:100),nrow = 20, ncol = 5))
ex
ex$test = c("a","b","c")
ex$test = c("a",rep("b",19))
ex
str(ex)
ex$test = as.factor(c("a",rep("b",19)))
ex
str(ex)
ex$test[2] = "c"
str(ex$test[2])
as.data.frame(ex$test[2])
as.data.frame(ex$test)
as.data.frame(ex$test, factor = "a","b","c")
as.data.frame(ex$test, factor = c("a","b","c"))
ex$test
?factor
factor(ex$test)
factor(1:10)
factor(c("a","b","c"))
ex$test = factor(c("a","b","c"))
str(ex$test)
summary(ex$test)
ex$test = factor(rep("a",20))
ex$test = factor(rep("d",20))
str(ex$test)
ex$test = factor((rep("d",10),"e"))
ex$test = factor(c(rep("d",10),"e"))
ex$test = factor(c(rep("d",19),"e"))
ex
str(ex)
ex2 = ex[1:19,]
str(ex2)
ex2
ex3 = rbind(ex2,c(1,1,1,1,""f))
ex3 = rbind(ex2,c(1,1,1,1,"f"))
x = sample(10)
?rnorm
rnorm(1)
rnorm(2)
hist(rnorm(100))
x = rnorm(100)
y = jitter(x)
cor(x,y)
cor.test(x,y)
?cor.test
y = jitter(x,100)
cor.test(x,y)
plot(x,y)
y = jitter(x,1000)
plot(x,y)
cor.test(x,y)
z = rnorm(100,1)
hist(x)
hist(z)
hist(c(z,y,x))
z = rnorm(1000,1)
x = rnorm(1000)
y = jitter(x,1000)
hist(c(z,y,x))
hist(c(z,y,x),breaks=100)
z = rnorm(1000,4)
hist(c(z,y,x),breaks=100)
z = rnorm(1000,2)
hist(c(z,y,x),breaks=100)
t.test(z,x)
ks.test(z,x)
kruskal.test(z,x)
t.test(z,x)
t.test(z,x,y)
t.test(z,x)
n = t.test(z,x)
n
str(n)
n = lm(z~x)
n
anova(n)
mean(z)
mean(x)
stage = c(rep("a",500),rep("b",300),rep("c",200))
lm(x~y*c)
lm(x~y*stage)
anova(lm(x~y*stage))
summary(lm(x~y*stage))
hist(c(z,y,x),breaks=100)
hist(c(y,x),breaks=100)
hist(c(y,x),breaks=100,add =T)
hist(c(y,x),breaks=100,add =T)
hist(c(y,x),breaks=100,add =T)
hist(c(y,x),breaks=100,add =T)
hist(c(y,x),breaks=100)
hist(c(z),breaks=100,add =T)
hist(c(y,x),breaks=100)
hist(c(z),breaks=100,add =T,col = "red")
hist(c(z),breaks=100,add =T,col = "red")
hist(c(y,x),breaks=100,xlim = (-4,10))
hist(c(y,x),breaks=100,xlim = c(-4,10))
hist(c(z),breaks=100,add =T,col = "red")
hist(c(y,x),breaks=100,xlim = c(-4,6))
hist(c(z),breaks=100,add =T,col = "red")
t.test(x,c(yx))
t.test(x,c(y,x))
t.test(z,c(y,x))
kruskal.test(z,c(y,x))
kruskal.test(z,c(y))
t.test(z,c(y))
?kruskal.test
z = rnorm(1000,10)
t.test(z,c(y))
hist(c(y,x),breaks=100,xlim = c(-4,6))
hist(c(y,x),breaks=100,xlim = c(-4,1))
dev.new()
hist(c(y,x),breaks=100,xlim = c(-4,15))
hist(c(z),breaks=100,add =T,col = "red")
knit_with_parameters('~/Documents/protocols_documentation/plot_phylogeny_inR/phylo_plot_02_03_2018.Rmd')
420/375
375.1.1
375*1.1
375*1.12
library(DESeq2)
?DESeq2
?DESeq
getwd()
#combining figures
library(multipanelfigure)
library(magrittr)
library(dplyr)
library(DECIPHER)
library(phangorn)
library(phyloseq)
library(NJ)
?NJ
summary.table=read.table("../results/summary.table",header = T,row.names = 1)
getwd()
setwd("/Users/jerry/Documents/CSBQ/hijri/Acadian_seaplants/manuscript_Rmd")
summary.table=read.table("../results/summary.table",header = T,row.names = 1)
summary.table
library(knitr)
summary.table=read.table("../results/summary.table",header = T,row.names = 1)
colnames(summary.table)[2] = "Nb_seq_sum"
summary.table[,2] = summary.table[,2]*1000
summary.table=t(summary.table[c(4:1),])
summary.table[1,] = c(192,96,192,96)
summary.table = summary.table[c(1,9,2:7,8,10),]
kable(summary.table,digits =4,caption = "Sequencing and ASV summary")
?kable
library(knitr)
summary.table=read.table("../results/summary.table",header = T,row.names = 1)
colnames(summary.table)[2] = "Nb_seq_sum"
summary.table[,2] = summary.table[,2]*1000
summary.table=t(summary.table[c(4:1),])
summary.table[1,] = c(192,96,192,96)
summary.table = summary.table[c(1,9,2:7,8,10),]
kable(summary.table,format.args=list(big.mark = ','), digits =4,caption = "Sequencing and ASV summary")
=read.table("../results/summary.table",header = T,row.names = 1)
summary.table=read.table("../results/summary.table",header = T,row.names = 1)
summary.table
library(knitr)
summary.table=read.table("../results/summary.table",header = T,row.names = 1)
colnames(summary.table)[2] = "Nb_seq_sum"
summary.table[,2] = summary.table[,2]*1000
summary.table=t(summary.table[c(4:1),])
summary.table[1,] = c(192,96,192,96)
summary.table = summary.table[c(2:6,1,9,7,8,10),]
kable(summary.table,format.args=list(big.mark = ','), digits =4,caption = "Sequencing and ASV summary")
library(knitr)
summary.table=read.table("../results/summary.table",header = T,row.names = 1)
colnames(summary.table)[2] = "Nb_seq_sum"
summary.table[,2] = summary.table[,2]*1000
summary.table=t(summary.table[c(4:1),])
summary.table[1,] = c(192,96,192,96)
summary.table = summary.table[c(2:6,1,9,8,10,7),]
kable(summary.table,format.args=list(big.mark = ','), digits =4,caption = "Sequencing and ASV summary")
library(knitr)
permanova.summary = read.table("../results/permanova.summary")
colnames(permanova.summary) = c("fungi_soil","fungi_root","bacteria_soil","bacteria-root")
kable(permanova.summary,digits =4,caption = "summary of PERMANOVAs*")
getwd()
96*192
96+192
288*2
192+384
setwd("/Users/jerry/Documents/CSBQ/hijri/Acadian_seaplants/")
library(nlme)
source("/Library/Frameworks/R.framework/Versions/3.4/Resources/library/Legendre_numericalecology/anova.2way.R")
####setting things up -----
productivity = read.table("results/plant_productivity_data.tsv", header = T, stringsAsFactors = F,sep = "\t")
productivity.norm = productivity
productivity_all = productivity
#we do a sqrt transformation on all variables to help in normalizing (it helps in all cases, but it's not perfect. Some residuals are still not normally distributed. But the effect is so strong that we don't care too much.)
#####
#NO NORMALITY
dev.new()
par(mfrow = c(4,3))
for(species in c("Tomato","Pepper"))
{
#per species
productivity.norm = productivity_all[productivity_all[,1] == species,]
productivity = productivity_all[productivity_all[,1] == species,]
productivity.norm$fruit.number = sqrt(productivity$fruit.number)
lmm.fruit.number <- lme(fruit.number~treatment,data = productivity.norm,random = ~1|block/replicate, method = "REML")
print(bartlett.test(fruit.number~treatment,data = productivity.norm))
print(anova(lmm.fruit.number))
print(shapiro.test(lmm.fruit.number$residuals[,1])) #test the normality of the residualds for the fixed effects...
qqnorm(residuals(lmm.fruit.number));qqline(residuals(lmm.fruit.number))
#So we do an ANOVA with premutation... results are the same.
#anova.2way(fruit.number~treatment,data = productivity.norm,nperm = 999,model = 1)
#NO NORMALITY
productivity.norm$average.fruit.weight = sqrt(productivity$average.fruit.weight)
lmm.average.fruit.weight <- lme(average.fruit.weight~treatment,data = productivity.norm,random = ~1|block/replicate, method = "REML")
print(bartlett.test(average.fruit.weight~treatment,data = productivity.norm))
print(anova(lmm.average.fruit.weight))
print(shapiro.test(lmm.average.fruit.weight$residuals[,1])) #test the normality of the residualds for the fixed effects...
qqnorm(residuals(lmm.average.fruit.weight));qqline(residuals(lmm.average.fruit.weight))
#So we do an ANOVA with premutation... results are the same.
#         anova.2way(average.fruit.weight~treatment,data = productivity.norm,nperm = 999,model = 1)
#NORMALITY LOG
productivity.norm$shoots.fresh.weight = log(productivity$shoots.fresh.weight)
lmm.shoots.fresh.weight <- lme(shoots.fresh.weight~treatment,data = productivity.norm,random = ~1|block/replicate, method = "REML")
print(bartlett.test(shoots.fresh.weight~treatment,data = productivity.norm))
print(anova(lmm.shoots.fresh.weight))
print(shapiro.test(lmm.shoots.fresh.weight$residuals[,1])) #test the normality of the residualds for the fixed effects...
qqnorm(residuals(lmm.shoots.fresh.weight));qqline(residuals(lmm.shoots.fresh.weight))
#NORMALITY SQRT
productivity.norm$shoots.dry.weight = sqrt(productivity$shoots.dry.weight)
lmm.shoots.dry.weight <- lme(shoots.dry.weight~treatment,data = productivity.norm,random = ~1|block/replicate, method = "REML")
print(bartlett.test(shoots.dry.weight~treatment,data = productivity.norm))
print(anova(lmm.shoots.dry.weight))
print(shapiro.test(lmm.shoots.dry.weight$residuals[,1])) #test the normality of the residualds for the fixed effects...
qqnorm(residuals(lmm.shoots.dry.weight));qqline(residuals(lmm.shoots.dry.weight))
#NORMALITY LOG
productivity.norm$roots.fresh.weight = sqrt(productivity$roots.fresh.weight)
lmm.roots.fresh.weight <- lme(roots.fresh.weight~treatment,data = productivity.norm,random = ~1|block/replicate, method = "REML")
print(bartlett.test(roots.fresh.weight~treatment,data = productivity.norm))
print(anova(lmm.roots.fresh.weight))
print(shapiro.test(lmm.roots.fresh.weight$residuals[,1])) #test the normality of the residualds for the fixed effects...
qqnorm(residuals(lmm.roots.fresh.weight));qqline(residuals(lmm.roots.fresh.weight))
#NORMALITY SQRT
productivity.norm$roots.dry.weight = sqrt(productivity$roots.dry.weight)
lmm.roots.dry.weight <- lme(roots.dry.weight~treatment,data = productivity.norm,random = ~1|block/replicate, method = "REML")
print(bartlett.test(roots.dry.weight~treatment,data = productivity.norm))
print(anova(lmm.roots.dry.weight))
print(shapiro.test(lmm.roots.dry.weight$residuals[,1])) #test the normality of the residualds for the fixed effects...
qqnorm(residuals(lmm.roots.dry.weight));qqline(residuals(lmm.roots.dry.weight))
}
#get productivity fold changes as well...
p_p = productivity_all[productivity_all[,1]=="Pepper",]
p_t = productivity_all[productivity_all[,1]=="Tomato",]
#boxplot
#boxplot it?
dev.new(width=14, height=10,units = "cm",noRStudioGD = TRUE)
par(mfrow = c(2,3),mar = c(6,5,4,2))
par(mgp = c(3.5,2,1),cex.lab = 1.5)
names = expression(italic(control),italic(amendment),italic(control),italic(amendment))
x=boxplot(fruit.number~treatment*plant,data = productivity_all,ylim = c(0,max(productivity_all$fruit.number)*1.0),show.names=F, font = 2,cex.main = 1.5, main = "Fruit number")
abline(v = 2.5,lty = 2)
#Fold changes
p_fc = signif(mean(p_p$fruit.number[p_p[,2]== "F+"])/mean(p_p$fruit.number[p_p[,2]== "F-"]),3)
t_fc = signif(mean(p_t$fruit.number[p_t[,2]== "F+"])/mean(p_t$fruit.number[p_t[,2]== "F-"]),3)
mtext(text = c(paste("Pepper\n(",p_fc,"X)",sep=""),paste("Tomato\n(",t_fc,"X)",sep="")),at = c(1.5,3.5),side = 1,line = -23,cex = 1.5)
text(labels = c("a","b","a","b"),x = c(1.2,2.2,3.2,4.2),y = x$stats[5,]+max(x$stats[5,])/20,cex = 1.5,font =3)
text(labels = names,x = c(1,2,3,4),c(-2,-2,-2,-2),srt = 60,xpd = T,adj = 1)
x=boxplot(average.fruit.weight~treatment*plant,data = productivity_all,ylim = c(0,max(productivity_all$average.fruit.weight)*1.2),names = names,font = 2,cex.main = 1.5, main = "Avg fruit fresh weight",ylab = "grams")
abline(v = 2.5,lty = 2)
p_fc = signif(mean(p_p$average.fruit.weight[p_p[,2]== "F+"])/mean(p_p$average.fruit.weight[p_p[,2]== "F-"]),3)
t_fc = signif(mean(p_t$average.fruit.weight[p_t[,2]== "F+"])/mean(p_t$average.fruit.weight[p_t[,2]== "F-"]),3)
mtext(text = c(paste("Pepper\n(",p_fc,"X)",sep=""),"Tomato"),at = c(1.5,3.5),side = 1,line = c(-23,-25),cex = 1.5)
text(labels = c("a","b"),x = c(1.2,2.2),y = x$stats[5,1:2]+max(x$stats[5,1:2])/20,cex = 1.5,font =3)
x=boxplot(shoots.fresh.weight~treatment*plant,data = productivity_all,ylim = c(0,max(productivity_all$shoots.fresh.weight)*1.0),names = names,font = 2,cex.main = 1.5, main = "Shoot fresh weight",ylab = "grams")
abline(v = 2.5,lty = 2)
#Fold changes
p_fc = signif(mean(p_p$shoots.fresh.weight[p_p[,2]== "F+"])/mean(p_p$shoots.fresh.weight[p_p[,2]== "F-"]),3)
t_fc = signif(mean(p_t$shoots.fresh.weight[p_t[,2]== "F+"])/mean(p_t$shoots.fresh.weight[p_t[,2]== "F-"]),3)
mtext(text = c(paste("Pepper\n(",p_fc,"X)",sep=""),paste("Tomato\n(",t_fc,"X)",sep="")),at = c(1.5,3.5),side = 1,line = -23,cex = 1.5)
text(labels = c("a","b","a","b"),x = c(1.2,2.2,3.2,4.2),y = x$stats[5,]+max(x$stats[5,])/20,cex = 1.5,font =3)
x=boxplot(shoots.dry.weight~treatment*plant,data = productivity_all,ylim = c(0,max(productivity_all$shoots.dry.weight)*1.0),names = names,font = 2,cex.main = 1.5, main = "Shoot dry weight",ylab = "grams")
abline(v = 2.5,lty = 2)
#Fold changes
p_fc = signif(mean(p_p$shoots.dry.weight[p_p[,2]== "F+"])/mean(p_p$shoots.dry.weight[p_p[,2]== "F-"]),3)
t_fc = signif(mean(p_t$shoots.dry.weight[p_t[,2]== "F+"])/mean(p_t$shoots.dry.weight[p_t[,2]== "F-"]),3)
mtext(text = c(paste("Pepper\n(",p_fc,"X)",sep=""),paste("Tomato\n(",t_fc,"X)",sep="")),at = c(1.5,3.5),side = 1,line = -23,cex = 1.5)
text(labels = c("a","b","a","b"),x = c(1.2,2.2,3.2,4.2),y = x$stats[5,]+max(x$stats[5,])/20,cex = 1.5,font =3)
x=boxplot(roots.fresh.weight~treatment*plant,data = productivity_all,ylim = c(0,max(productivity_all$roots.fresh.weight)*1.0),names = names,font = 2,cex.main = 1.5, main = "Root fresh weight",ylab = "grams")
abline(v = 2.5,lty = 2)
#Fold changes
p_fc = signif(mean(p_p$roots.fresh.weight[p_p[,2]== "F+"])/mean(p_p$roots.fresh.weight[p_p[,2]== "F-"]),3)
t_fc = signif(mean(p_t$roots.fresh.weight[p_t[,2]== "F+"])/mean(p_t$roots.fresh.weight[p_t[,2]== "F-"]),3)
mtext(text = c(paste("Pepper\n(",p_fc,"X)",sep=""),paste("Tomato\n(",t_fc,"X)",sep="")),at = c(1.5,3.5),side = 1,line = -23,cex = 1.5)
text(labels = c("a","b","a","b"),x = c(1.2,2.2,3.2,4.2),y = x$stats[5,]+max(x$stats[5,])/20,cex = 1.5,font =3)
x=boxplot(roots.dry.weight~treatment*plant,data = productivity_all,ylim = c(0,max(productivity_all$roots.dry.weight)*1.05),names = names,font = 2,cex.main = 1.5, main = "Root dry weight",ylab = "grams")
abline(v = 2.5,lty = 2)
#Fold changes
p_fc = signif(mean(p_p$roots.dry.weight[p_p[,2]== "F+"])/mean(p_p$roots.dry.weight[p_p[,2]== "F-"]),3)
t_fc = signif(mean(p_t$roots.dry.weight[p_t[,2]== "F+"])/mean(p_t$roots.dry.weight[p_t[,2]== "F-"]),3)
mtext(text = c(paste("Pepper\n(",p_fc,"X)",sep=""),paste("Tomato\n(",t_fc,"X)",sep="")),at = c(1.5,3.5),side = 1,line = -23,cex = 1.5)
text(labels = c("a","b","a","b"),x = c(1.2,2.2,3.2,4.2),y = x$stats[5,]+max(x$stats[5,])/20,cex = 1.5,font =3)
setwd("/Users/jerry/Documents/CSBQ/hijri/Acadian_seaplants/")
library(nlme)
source("/Library/Frameworks/R.framework/Versions/3.4/Resources/library/Legendre_numericalecology/anova.2way.R")
####setting things up -----
productivity = read.table("results/plant_productivity_data.tsv", header = T, stringsAsFactors = F,sep = "\t")
productivity.norm = productivity
productivity_all = productivity
#we do a sqrt transformation on all variables to help in normalizing (it helps in all cases, but it's not perfect. Some residuals are still not normally distributed. But the effect is so strong that we don't care too much.)
#####
#NO NORMALITY
dev.new()
par(mfrow = c(4,3))
for(species in c("Tomato","Pepper"))
{
#per species
productivity.norm = productivity_all[productivity_all[,1] == species,]
productivity = productivity_all[productivity_all[,1] == species,]
productivity.norm$fruit.number = sqrt(productivity$fruit.number)
lmm.fruit.number <- lme(fruit.number~treatment,data = productivity.norm,random = ~1|block/replicate, method = "REML")
print(bartlett.test(fruit.number~treatment,data = productivity.norm))
print(anova(lmm.fruit.number))
print(shapiro.test(lmm.fruit.number$residuals[,1])) #test the normality of the residualds for the fixed effects...
qqnorm(residuals(lmm.fruit.number));qqline(residuals(lmm.fruit.number))
#So we do an ANOVA with premutation... results are the same.
#anova.2way(fruit.number~treatment,data = productivity.norm,nperm = 999,model = 1)
#NO NORMALITY
productivity.norm$average.fruit.weight = sqrt(productivity$average.fruit.weight)
lmm.average.fruit.weight <- lme(average.fruit.weight~treatment,data = productivity.norm,random = ~1|block/replicate, method = "REML")
print(bartlett.test(average.fruit.weight~treatment,data = productivity.norm))
print(anova(lmm.average.fruit.weight))
print(shapiro.test(lmm.average.fruit.weight$residuals[,1])) #test the normality of the residualds for the fixed effects...
qqnorm(residuals(lmm.average.fruit.weight));qqline(residuals(lmm.average.fruit.weight))
#So we do an ANOVA with premutation... results are the same.
#         anova.2way(average.fruit.weight~treatment,data = productivity.norm,nperm = 999,model = 1)
#NORMALITY LOG
productivity.norm$shoots.fresh.weight = log(productivity$shoots.fresh.weight)
lmm.shoots.fresh.weight <- lme(shoots.fresh.weight~treatment,data = productivity.norm,random = ~1|block/replicate, method = "REML")
print(bartlett.test(shoots.fresh.weight~treatment,data = productivity.norm))
print(anova(lmm.shoots.fresh.weight))
print(shapiro.test(lmm.shoots.fresh.weight$residuals[,1])) #test the normality of the residualds for the fixed effects...
qqnorm(residuals(lmm.shoots.fresh.weight));qqline(residuals(lmm.shoots.fresh.weight))
#NORMALITY SQRT
productivity.norm$shoots.dry.weight = sqrt(productivity$shoots.dry.weight)
lmm.shoots.dry.weight <- lme(shoots.dry.weight~treatment,data = productivity.norm,random = ~1|block/replicate, method = "REML")
print(bartlett.test(shoots.dry.weight~treatment,data = productivity.norm))
print(anova(lmm.shoots.dry.weight))
print(shapiro.test(lmm.shoots.dry.weight$residuals[,1])) #test the normality of the residualds for the fixed effects...
qqnorm(residuals(lmm.shoots.dry.weight));qqline(residuals(lmm.shoots.dry.weight))
#NORMALITY LOG
productivity.norm$roots.fresh.weight = sqrt(productivity$roots.fresh.weight)
lmm.roots.fresh.weight <- lme(roots.fresh.weight~treatment,data = productivity.norm,random = ~1|block/replicate, method = "REML")
print(bartlett.test(roots.fresh.weight~treatment,data = productivity.norm))
print(anova(lmm.roots.fresh.weight))
print(shapiro.test(lmm.roots.fresh.weight$residuals[,1])) #test the normality of the residualds for the fixed effects...
qqnorm(residuals(lmm.roots.fresh.weight));qqline(residuals(lmm.roots.fresh.weight))
#NORMALITY SQRT
productivity.norm$roots.dry.weight = sqrt(productivity$roots.dry.weight)
lmm.roots.dry.weight <- lme(roots.dry.weight~treatment,data = productivity.norm,random = ~1|block/replicate, method = "REML")
print(bartlett.test(roots.dry.weight~treatment,data = productivity.norm))
print(anova(lmm.roots.dry.weight))
print(shapiro.test(lmm.roots.dry.weight$residuals[,1])) #test the normality of the residualds for the fixed effects...
qqnorm(residuals(lmm.roots.dry.weight));qqline(residuals(lmm.roots.dry.weight))
}
#get productivity fold changes as well...
p_p = productivity_all[productivity_all[,1]=="Pepper",]
p_t = productivity_all[productivity_all[,1]=="Tomato",]
dev.new(width=14, height=10,units = "cm",noRStudioGD = TRUE)
par(mfrow = c(2,3),mar = c(6,5,4,2))
par(mgp = c(3.5,2,1),cex.lab = 1.5)
names = expression(italic(control),italic(amendment),italic(control),italic(amendment))
x=boxplot(fruit.number~treatment*plant,data = productivity_all,ylim = c(0,max(productivity_all$fruit.number)*1.0),show.names=F, font = 2,cex.main = 1.5, main = "Fruit number")
abline(v = 2.5,lty = 2)
#Fold changes
p_fc = signif(mean(p_p$fruit.number[p_p[,2]== "F+"])/mean(p_p$fruit.number[p_p[,2]== "F-"]),3)
t_fc = signif(mean(p_t$fruit.number[p_t[,2]== "F+"])/mean(p_t$fruit.number[p_t[,2]== "F-"]),3)
mtext(text = c(paste("Pepper\n(",p_fc,"X)",sep=""),paste("Tomato\n(",t_fc,"X)",sep="")),at = c(1.5,3.5),side = 1,line = -23,cex = 1.5)
text(labels = c("a","b","a","b"),x = c(1.2,2.2,3.2,4.2),y = x$stats[5,]+max(x$stats[5,])/20,cex = 1.5,font =3)
text(labels = names,x = c(1,2,3,4),c(-2,-2,-2,-2),srt = 60,xpd = T,adj = 1)
mtext(text = c(paste("Pepper\n(",p_fc,"X)",sep=""),paste("Tomato\n(",t_fc,"X)",sep="")),at = c(1.5,3.5),side = 1,line = -23,cex = 1.5)
mtext(text = c(paste("Pepper\n(",p_fc,"X)",sep=""),paste("Tomato\n(",t_fc,"X)",sep="")),at = c(1.5,3.5),side = 1,line = -22,cex = 1.5)
text(labels = names,x = c(1,2,3,4),c(-2,-2,-2,-2),srt = 60,xpd = T,adj = 1)
text(labels = names,x = c(1,2,3,4),c(-2,-2,-2,-2),srt = 60,xpd = T,adj = 2)
x=boxplot(fruit.number~treatment*plant,data = productivity_all,ylim = c(0,max(productivity_all$fruit.number)*1.0),show.names=T, font = 2,cex.main = 1.5, main = "Fruit number")
abline(v = 2.5,lty = 2)
#Fold changes
x=boxplot(fruit.number~treatment*plant,data = productivity_all,ylim = c(0,max(productivity_all$fruit.number)*1.0),show.names=T, font = 2,cex.main = 1.5, main = "Fruit number")
dev.new()
x=boxplot(fruit.number~treatment*plant,data = productivity_all,ylim = c(0,max(productivity_all$fruit.number)*1.0),show.names=T, font = 2,cex.main = 1.5, main = "Fruit number")
dev.new(width=14, height=10,units = "cm",noRStudioGD = TRUE)
par(mfrow = c(2,3),mar = c(6,5,4,2))
par(mgp = c(3.5,2,1),cex.lab = 1.5)
names = expression(italic(control),italic(amendment),italic(control),italic(amendment))
x=boxplot(fruit.number~treatment*plant,data = productivity_all,ylim = c(0,max(productivity_all$fruit.number)*1.0),names = names, font = 2,cex.main = 1.5, main = "Fruit number")
abline(v = 2.5,lty = 2)
#Fold changes
p_fc = signif(mean(p_p$fruit.number[p_p[,2]== "F+"])/mean(p_p$fruit.number[p_p[,2]== "F-"]),3)
t_fc = signif(mean(p_t$fruit.number[p_t[,2]== "F+"])/mean(p_t$fruit.number[p_t[,2]== "F-"]),3)
mtext(text = c(paste("Pepper\n(",p_fc,"X)",sep=""),paste("Tomato\n(",t_fc,"X)",sep="")),at = c(1.5,3.5),side = 1,line = -23,cex = 1.5)
text(labels = c("a","b","a","b"),x = c(1.2,2.2,3.2,4.2),y = x$stats[5,]+max(x$stats[5,])/20,cex = 1.5,font =3)
text(labels = names,x = c(1,2,3,4),c(-2,-2,-2,-2),srt = 60,xpd = T,adj = 1)
x=boxplot(average.fruit.weight~treatment*plant,data = productivity_all,ylim = c(0,max(productivity_all$average.fruit.weight)*1.2),names = names,font = 2,cex.main = 1.5, main = "Avg fruit fresh weight",ylab = "grams")
abline(v = 2.5,lty = 2)
p_fc = signif(mean(p_p$average.fruit.weight[p_p[,2]== "F+"])/mean(p_p$average.fruit.weight[p_p[,2]== "F-"]),3)
t_fc = signif(mean(p_t$average.fruit.weight[p_t[,2]== "F+"])/mean(p_t$average.fruit.weight[p_t[,2]== "F-"]),3)
mtext(text = c(paste("Pepper\n(",p_fc,"X)",sep=""),"Tomato"),at = c(1.5,3.5),side = 1,line = c(-23,-25),cex = 1.5)
text(labels = c("a","b"),x = c(1.2,2.2),y = x$stats[5,1:2]+max(x$stats[5,1:2])/20,cex = 1.5,font =3)
dev.off()
dev.off()
dev.off()
#get productivity fold changes as well...
p_p = productivity_all[productivity_all[,1]=="Pepper",]
p_t = productivity_all[productivity_all[,1]=="Tomato",]
#boxplot
#boxplot it?
dev.new(width=14, height=10,units = "cm",noRStudioGD = TRUE)
par(mfrow = c(2,3),mar = c(6,5,4,2))
par(mgp = c(3.5,2,1),cex.lab = 1.5)
names = expression(italic(control),italic(amendment),italic(control),italic(amendment))
x=boxplot(fruit.number~treatment*plant,data = productivity_all,ylim = c(0,max(productivity_all$fruit.number)*1.0),names = names, font = 2,cex.main = 1.5, main = "Fruit number")
abline(v = 2.5,lty = 2)
#Fold changes
p_fc = signif(mean(p_p$fruit.number[p_p[,2]== "F+"])/mean(p_p$fruit.number[p_p[,2]== "F-"]),3)
t_fc = signif(mean(p_t$fruit.number[p_t[,2]== "F+"])/mean(p_t$fruit.number[p_t[,2]== "F-"]),3)
mtext(text = c(paste("Pepper\n(",p_fc,"X)",sep=""),paste("Tomato\n(",t_fc,"X)",sep="")),at = c(1.5,3.5),side = 1,line = -23,cex = 1.5)
text(labels = c("a","b","a","b"),x = c(1.2,2.2,3.2,4.2),y = x$stats[5,]+max(x$stats[5,])/20,cex = 1.5,font =3)
x=boxplot(average.fruit.weight~treatment*plant,data = productivity_all,ylim = c(0,max(productivity_all$average.fruit.weight)*1.2),names = names,font = 2,cex.main = 1.5, main = "Avg fruit fresh weight",ylab = "grams")
abline(v = 2.5,lty = 2)
p_fc = signif(mean(p_p$average.fruit.weight[p_p[,2]== "F+"])/mean(p_p$average.fruit.weight[p_p[,2]== "F-"]),3)
t_fc = signif(mean(p_t$average.fruit.weight[p_t[,2]== "F+"])/mean(p_t$average.fruit.weight[p_t[,2]== "F-"]),3)
mtext(text = c(paste("Pepper\n(",p_fc,"X)",sep=""),"Tomato"),at = c(1.5,3.5),side = 1,line = c(-23,-25),cex = 1.5)
text(labels = c("a","b"),x = c(1.2,2.2),y = x$stats[5,1:2]+max(x$stats[5,1:2])/20,cex = 1.5,font =3)
x=boxplot(shoots.fresh.weight~treatment*plant,data = productivity_all,ylim = c(0,max(productivity_all$shoots.fresh.weight)*1.0),names = names,font = 2,cex.main = 1.5, main = "Shoot fresh weight",ylab = "grams")
abline(v = 2.5,lty = 2)
#Fold changes
p_fc = signif(mean(p_p$shoots.fresh.weight[p_p[,2]== "F+"])/mean(p_p$shoots.fresh.weight[p_p[,2]== "F-"]),3)
t_fc = signif(mean(p_t$shoots.fresh.weight[p_t[,2]== "F+"])/mean(p_t$shoots.fresh.weight[p_t[,2]== "F-"]),3)
mtext(text = c(paste("Pepper\n(",p_fc,"X)",sep=""),paste("Tomato\n(",t_fc,"X)",sep="")),at = c(1.5,3.5),side = 1,line = -23,cex = 1.5)
text(labels = c("a","b","a","b"),x = c(1.2,2.2,3.2,4.2),y = x$stats[5,]+max(x$stats[5,])/20,cex = 1.5,font =3)
x=boxplot(shoots.dry.weight~treatment*plant,data = productivity_all,ylim = c(0,max(productivity_all$shoots.dry.weight)*1.0),names = names,font = 2,cex.main = 1.5, main = "Shoot dry weight",ylab = "grams")
abline(v = 2.5,lty = 2)
#Fold changes
p_fc = signif(mean(p_p$shoots.dry.weight[p_p[,2]== "F+"])/mean(p_p$shoots.dry.weight[p_p[,2]== "F-"]),3)
t_fc = signif(mean(p_t$shoots.dry.weight[p_t[,2]== "F+"])/mean(p_t$shoots.dry.weight[p_t[,2]== "F-"]),3)
mtext(text = c(paste("Pepper\n(",p_fc,"X)",sep=""),paste("Tomato\n(",t_fc,"X)",sep="")),at = c(1.5,3.5),side = 1,line = -23,cex = 1.5)
text(labels = c("a","b","a","b"),x = c(1.2,2.2,3.2,4.2),y = x$stats[5,]+max(x$stats[5,])/20,cex = 1.5,font =3)
x=boxplot(roots.fresh.weight~treatment*plant,data = productivity_all,ylim = c(0,max(productivity_all$roots.fresh.weight)*1.0),names = names,font = 2,cex.main = 1.5, main = "Root fresh weight",ylab = "grams")
abline(v = 2.5,lty = 2)
#Fold changes
p_fc = signif(mean(p_p$roots.fresh.weight[p_p[,2]== "F+"])/mean(p_p$roots.fresh.weight[p_p[,2]== "F-"]),3)
t_fc = signif(mean(p_t$roots.fresh.weight[p_t[,2]== "F+"])/mean(p_t$roots.fresh.weight[p_t[,2]== "F-"]),3)
mtext(text = c(paste("Pepper\n(",p_fc,"X)",sep=""),paste("Tomato\n(",t_fc,"X)",sep="")),at = c(1.5,3.5),side = 1,line = -23,cex = 1.5)
text(labels = c("a","b","a","b"),x = c(1.2,2.2,3.2,4.2),y = x$stats[5,]+max(x$stats[5,])/20,cex = 1.5,font =3)
x=boxplot(roots.dry.weight~treatment*plant,data = productivity_all,ylim = c(0,max(productivity_all$roots.dry.weight)*1.05),names = names,font = 2,cex.main = 1.5, main = "Root dry weight",ylab = "grams")
abline(v = 2.5,lty = 2)
#Fold changes
p_fc = signif(mean(p_p$roots.dry.weight[p_p[,2]== "F+"])/mean(p_p$roots.dry.weight[p_p[,2]== "F-"]),3)
t_fc = signif(mean(p_t$roots.dry.weight[p_t[,2]== "F+"])/mean(p_t$roots.dry.weight[p_t[,2]== "F-"]),3)
mtext(text = c(paste("Pepper\n(",p_fc,"X)",sep=""),paste("Tomato\n(",t_fc,"X)",sep="")),at = c(1.5,3.5),side = 1,line = -23,cex = 1.5)
text(labels = c("a","b","a","b"),x = c(1.2,2.2,3.2,4.2),y = x$stats[5,]+max(x$stats[5,])/20,cex = 1.5,font =3)
dev.print(device=pdf, "figures/Figure_3_productivity.pdf", onefile=FALSE)
dev.off()
